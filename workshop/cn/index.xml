<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CloudFront Extensions workshop on CloudFront Extensions</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/</link><description>Recent content in CloudFront Extensions workshop on CloudFront Extensions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS CloudShell</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/prerequisite/aws-cloudshell/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/prerequisite/aws-cloudshell/readme/</guid><description>AWS CloudShell是一个基于浏览器的工具用于安全的管理和使用您的AWS资源。CloudShell会预先通过您的证书进行鉴权，同时预置了开发和部署常用的工具。通过使用CloudShell，您可以快速通过AWS CLI执行脚本，通过AWS SDK调试AWS服务接口，或者在其上使用其他工具。您可以直接通过浏览器使用CloudShell，无需安装其他应用。
开始使用AWS CloudShell 进入CloudShell 请确保右上角区域选择为：弗吉尼亚北部 (us-east-1) 当AWS CloudShell第一次在浏览器中启动时，一个欢迎页面会显示并列出CloudShell的关键功能。当您关闭欢迎页面后，CloudShell会需要一段时间启动，当看到命令提示符时，表示CloudShell启动完成，您就可以开始使用了
您可在右上角的设置按钮中修改字体大小和CloudShell主题</description></item><item><title>S3桶</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/s3-bucket/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/s3-bucket/readme/</guid><description>执行如下操作删除S3桶
进入S3 console https://console.aws.amazon.com/s3
在搜索框中输入cloudfront-extension-workshop并搜索。选择要删除的桶后，点击上方清空按钮 点击删除按钮删除S3桶</description></item><item><title>通过拉取请求贡献代码</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/contribution/pr/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/contribution/pr/readme/</guid><description>拉取请求检查项 您可通过拉取请求实现新功能开发或bug修复。在您提交拉取请求前，请确保您已经按照如下内容操作过
阅读贡献指南 阅读Code of Conduct 编写单元测试用例，并且测试通过 您需要在代码中输出solution id. 示例，您只需要参考此示例并将SolutionId内容替换为您的内容，SolutionId会由仓库负责人提供 执行如下操作创建拉取请求：
复刻仓库 进入awslabs/aws-cloudfront-extensions 在右上角点击Fork 修改代码并测试 克隆复刻仓库并修改代码 根据您使用的语言执行 npm test 或 pytest 进行单元测试，并确保测试通过 在yaml文件中输出solution id 提交到复刻仓库 创建拉取请求 进入awslabs/aws-cloudfront-extensions 选择 New pull request 选择 compare across forks 在&amp;quot;head fork&amp;quot;下拉框中，选择您的复刻，然后在&amp;quot;compare branch&amp;quot;下拉框中选择相应分支 根据模版输入相应内容拉取请求模版并创建拉取请求 添加一个标签，标签命名规则为/ 等待您的拉取请求被审批通过</description></item><item><title>部署Lambda@Edge实现Cognito鉴权</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/deploy/deploy-auth/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/deploy/deploy-auth/readme/</guid><description>在本章中, 您将会在SAR（Serverless Application Repository）中查找并部署一个已发布的无服务器应用。此应用会在您的网站上实现Amazon Cognito鉴权功能。
如下是本实验的架构图
包含如下两个S3桶
私有S3桶: 包含私有内容，用户需要通过Amazon Cognito登录后才能访问此内容 公有S3桶: 包含本次实验的网站资源，用户无需登录即可通过CloudFront访问此资源 实现原理如下
用户访问Amazon Cognito UI页面进行登录 登录后，Cognito会生成一个JWT(Json Web Token)并返回一个包含JWT的跳转URL 用户的浏览器解析URL中的JWT，然后向S3桶中的私有内容发送请求，同时将JWT添加到鉴权header中 CloudFront将请求路由到最近的AWS边缘节点。在查看者请求（viewer request）阶段，CloudFront REC（区域边缘缓存）上会触发一个Lambda@Edge函数 此Lambda@Edge函数解析并校验JWT 如果Lambda@Edge函数的所有校验步骤都通过，Lambda@Edge删除鉴权header，并允许此请求继续向下分发到源站服务器（即私有S3桶） 私有S3桶中的私有内容将会返回给用户 在实验开始前，由于网页使用了jQuery，请确认此jQuery链接可以正常访问
通过CloudFormation部署网站 本步骤中，您将通过CloudFormation部署本实验的网站，包含一个私有S3桶、公有S3桶以及相应的前端资源
点击此链接启动CloudFormation堆栈 使用默认选项点击下一步，勾选全部我确认复选框后点击创建堆栈按钮. 等待部署完成 您可以在CloudFormation Console中查看部署进展。进入CloudFormation console并选择名字为auth-at-edge的堆栈 点击输出标签页，可以看到所有已创建的资源，找到CloudFrontDistribution、CognitoUserPoolId和DemoUrl，您将会在后续步骤中使用到它们 通过SAR部署鉴权校验应用 本步骤中，您将通过SAR(Serverless Application Repository)部署一个Lambda函数到您的账号
打开AWS SAR(Serverless Application Repository)页面 勾选搜索栏下方的Show apps that create custom IAM roles or resource policies复选框 在搜索栏中输入authentication-with-cognito并搜索，点击应用链接进入应用详情页面，点击Deploy按钮 您可通过搜索关键字aws-cloudfront-extensions找到所有CloudFront extensions
在应用详情页面中，粘贴上一步CloudFormation堆栈的Cognito User Pool Id，勾选I acknowledge that this app creates custom IAM roles 点击Deploy按钮。等待直到部署成功，部署完成后会自动跳转到无服务器应用页面 选择AuthenticationByCognito进入Lambda页面，下一步您将会配置此Lambda函数 配置CloudFront作为Lambda的触发器 本步骤中，您将为上一步部署完成的Lambda配置触发器</description></item><item><title>AWS CDK</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/prerequisite/aws-cdk/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/prerequisite/aws-cdk/readme/</guid><description>AWS Cloud Development Kit (AWS CDK) 是一种开源软件开发框架，可让您使用熟悉的编程语言来定义云应用程序资源。
AWS CDK目前没有预制在AWS CloudShell中，因此您在实验前需要先安装CDK
执行如下命令安装CDK
sudo npm install -g aws-cdk 执行如下命令检查安装是否成功，若安装成功，此命令会输出已安装的CDK版本号
cdk --version</description></item><item><title>Cognito用户池</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cognito-user-pool/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cognito-user-pool/readme/</guid><description>执行如下操作删除Cognito用户池
进入Amazon Cognito console
点击管理用户池
选择要删除的用户池
选择应用程序集成下的域名，并点击删除域按钮
选择常规设置
点击右上角的删除池按钮
输入delete后确认删除</description></item><item><title>报告issues</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/contribution/bug-report/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/contribution/bug-report/readme/</guid><description>您可通过github的issues功能实现bug和需求的提交及跟踪。 在您提交issue之前，请确保您已经阅读过贡献指南
通过如下步骤创建一个issue
进入GitHub仓库，选择Issues标签页并点击New issue按钮 选择issue类型 Bug (软件缺陷) Feature request (新需求) General issue (非软件功能的缺陷，例如文档问题) Security vulnerability (安全问题) 输入信息后提交issue</description></item><item><title>部署Lambda@Edge实现根据设备类型返回相应内容</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/deploy/deploy-device/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/deploy/deploy-device/readme/</guid><description>在本章中, 您将会在SAR（Serverless Application Repository）中查找并部署一个已发布的无服务器应用。此应用会根据设备类型返回相应内容，例如在手机上访问此网页，会返回手机端网页，在PC浏览器上访问同一网页，会返回桌面端网页
如下是本实验的架构图
S3桶包含一个实验网站的内容，桶中有如下4个文件夹：
desktop: 如果请求是来源于PC浏览器，此文件夹的资源将会返回 mobile: 如果请求是来源于手机，此文件夹的资源将会返回 smarttv: 如果请求是来源于智能电视，此文件夹的资源将会返回 tablet: 如果请求是来源于平板电脑，此文件夹的资源将会返回 实现原理如下
用户向CloudFront发送查看者请求 CloudFront将如下请求头转发到源站服务器，此请求头通过查看者请求中的User-Agent获得。 CloudFront会将如下请求头设置为true或者false，例如，如果请求是来源于手机，CloudFront会将CloudFront-Is-Mobile-Viewer设置为true并把其他三个请求头设置为false CloudFront-Is-Desktop-Viewer CloudFront-Is-Mobile-Viewer CloudFront-Is-SmartTV-Viewer CloudFront-Is-Tablet-Viewer CloudFront将请求路由到最近的AWS边缘节点。在源请求阶段，CloudFront REC（区域边缘缓存）上会触发一个Lambda@Edge函数 此Lambda@Edge函数根据请求头重写URI，例如，如果请求来源于手机，那么它将会请求mobile文件夹中的资源 S3桶的相应文件夹中的资源将会返回给用户 通过SAR部署应用 本步骤中，您将通过SAR(Serverless Application Repository)部署一个Lambda函数到您的账号
打开AWS SAR(Serverless Application Repository)页面 勾选搜索栏下方的Show apps that create custom IAM roles or resource policies复选框 在搜索栏中输入serving-based-on-device并搜索, 点击应用链接进入应用详情页面，点击Deploy按钮 您可通过搜索关键字aws-cloudfront-extensions找到所有CloudFront extensions
在应用详情页面中，勾选I acknowledge that this app creates custom IAM roles 点击Deploy按钮。等待直到部署成功，部署完成后会自动跳转到无服务器应用页面 接下来，您将开始部署网站，您可选择通过CDK或者CloudFormation部署网站</description></item><item><title>CloudFront分配</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cf-distribution/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cf-distribution/readme/</guid><description>执行如下步骤删除CloudFront分配
进入CloudFront console: https://console.aws.amazon.com/cloudfront
在CloudFront分配的搜索框中输入cloudfront-extension-workshop并搜索。然后点击右上角的禁用按钮 等待直到禁用操作完成，然后点击删除按钮</description></item><item><title>配置证书</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/prerequisite/aws-config/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/prerequisite/aws-config/readme/</guid><description>执行如下命令配置证书
aws configure 输入您的访问密钥，Default region name设置为us-east-1
AWS Access Key ID [None]: &amp;lt;type your access key id&amp;gt; AWS Secret Access Key [None]: &amp;lt;type your secret access key&amp;gt; Default region name [None]: us-east-1 Default output format [None]: 如果您忘了密钥，您需要在IAM console中重新创建一个新的密钥</description></item><item><title>CloudFormation</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cloudformation/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cloudformation/readme/</guid><description>执行如下操作删除Lambda和IAM角色
进入CloudFormation console https://console.aws.amazon.com/CloudFormation 选中堆栈sam-app， 然后点击删除</description></item><item><title>CloudShell</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cloudshell/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/cn/cleanup/cloudshell/readme/</guid><description>执行如下操作
进入CloudShell console https://console.aws.amazon.com/cloudshell 点击右上角的Actions。然后选择Delete AWS CloudShell home directory</description></item></channel></rss>