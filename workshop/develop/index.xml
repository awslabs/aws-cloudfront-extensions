<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop with CloudFront Extensions on CloudFront Extensions</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/</link><description>Recent content in Develop with CloudFront Extensions on CloudFront Extensions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>Create a CloudFront Distribution</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/cloudfront-distribution/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/cloudfront-distribution/readme/</guid><description>Before you create the example Lambda@Edge function, you need to have a CloudFront environment to work with that includes an origin to serve content from. If you already have an environment to use, you can skip this step.
To create a CloudFront distribution with an Amazon S3 origin, you will do the following steps
Create an S3 bucket Sign in to the AWS Management Console and open the Amazon S3 console at https://console.</description></item><item><title>Upload CloudFront Extensions code into CloudShell</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/download-code/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/download-code/readme/</guid><description>To download CloudFront Extensions code and upload it onto CloudShell
Skip this step if you already have the codes in CloudShell
Go to CloudFront Extensions code
Choose Download ZIP Upload the zip package onto CloudShell Unzip the package into home folder
unzip aws-cloudfront-extensions-main.zip You can also clone the codes by SSH or Https.
For SSH, you will need to setup the ssh key in your github account by following this doc</description></item><item><title>Understand CloudFront Extensions code structure</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/code-structure/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/code-structure/readme/</guid><description>You will see the following structure after cd aws-cloudfront-extensions-main Here are the explanation for each folder
.github/workflows: the workflow after a PR is created and managed by github actions docs: documents which are used for introducing the project and workshop edge/nodejs: lambda@Edge codes written in nodejs edge/python: lambda@Edge codes written in python scripts: shell scripts used in workflows templates: cdk scripts for deployment such as AWS WAF rules website: resources for holding a workshop In this workshop, you will create a Lambda@Edge function in edge/nodejs folder</description></item><item><title>Create a Lambda@Edge function</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/edge-function/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/edge-function/readme/</guid><description>In this step, you will create a Lambda function by AWS Serverless Application Model(SAM), the function adds code to update response headers in your CloudFront distribution.
Download a sample AWS SAM application After completing Upload CloudFront Extensions Code into CloudShell section, you have uploaded CloudFront Extensions into CloudShell, go to CloudFront Extensions folder and perform following commands:
cd edge/nodejs/ sam init Choose 1 - AWS Quick Start Templates</description></item><item><title>Test the Lambda@Edge function</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/test-function/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/test-function/readme/</guid><description>In this step, you will test the Lambda@Edge function created in the last step
Test Lambda@Edge function To test Lambda@Edge function:
Open AWS Lambda Console in https://console.aws.amazon.com/lambda/home?region=us-east-1#/functions
Choose the function you have created, it would be similar to the following
Choose Code tab of the page, as shown in the following image, you will see the code which has been deployed by AWS Serverless Application Model(SAM)</description></item><item><title>Trigger from CloudFront</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/trigger-function/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/develop/trigger-function/readme/</guid><description>Add a CloudFront Trigger to Run the Function Now that you have tested the Lambda function, in this step, you will configure the CloudFront trigger to run your function to add the headers in any response that CloudFront receives from the origin for your distribution.
To configure the CloudFront trigger for your function
Choose Configuration tab and choose Triggers, you will see there is an API Gateway trigger which is deployed by hello world SAM template, delete it since you will not need it in this workshop</description></item></channel></rss>