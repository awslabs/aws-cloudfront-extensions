<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CloudFront Extensions workshop on CloudFront Extensions</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/</link><description>Recent content in CloudFront Extensions workshop on CloudFront Extensions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://awslabs.github.io/aws-cloudfront-extensions/workshop/index.xml" rel="self" type="application/rss+xml"/><item><title>Contributing via pull requests</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/contribution/pr/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/contribution/pr/readme/</guid><description>Pull Request Checklist You are able to implement a new feature or fix an issue by pull requests, before sending pull requests, make sure you followed this list
Read contributing guidelines Read Code of Conduct Write unit test cases and make sure the unit test is passed It is mandatory to output solution id. Here is an example, you only need to replace the SolutionId Value with yours To send us a pull request by doing the following:</description></item><item><title>Create Snapshot</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/distribution/create-snapshot/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/distribution/create-snapshot/readme/</guid><description>So far, R1 has been completed, we will work on R2 in this section. We need to save the configuration of specific CloudFront distributions, so that it can rollback the configuration or apply the configuration to other CloudFront distributions.
ID Description Category Status R1 It shows different web pages according to the user&amp;rsquo;s browser type, for example, it redirects to page A when the user access it in PC browser, it redirects to page B when the user access it in Android browser, it redirects to page C when the user access it in iPhone browser.</description></item><item><title>Deploy an extension in CloudFront Extensions console</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/repo/deploy-device-ext/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/repo/deploy-device-ext/readme/</guid><description>The solution provides a set of ready-to-use extensions (Lambda@Edge functions, CloudFront Functions, CloudFormation templates) that could be useful when you use CloudFront. You can deploy them from the solution web console. After deployment, you can use it directly without programming or customize it when needed.
In the navigation panel, under Extensions, choose Repository.
Choose redirect-by-device, and click Deploy button. Choose the sample website distribution (you can find it in Outputs tab of CFExtSampleWorkshop stack) and choose Default (*) under Behaviors.</description></item><item><title>Deploy CloudFront Extensions Console</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/deploy/deploy-console/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/deploy/deploy-console/readme/</guid><description>Time to deploy: Approximately 20 minutes
Deployment steps Sign in to the AWS Management Console and select the button to launch the CloudFormation template. You can also download the template as a starting point for your own implementation.
We launch this template in US East (N. Virginia) Region, please check the region on the right-upper corner and make sure it is correct.
Choose Next.</description></item><item><title>Deploy Sample Website</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/prerequisite/sample-website/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/prerequisite/sample-website/readme/</guid><description>Time to deploy: Approximately 15 minutes
Launch Stack Sign in to the AWS Management Console and select the button to launch the CloudFormation template. You can also download the template as a starting point for your own implementation.
This template is created for us-east-1 region (N. Virginia) and will not work in other regions. The template can only be launched in US East (N.</description></item><item><title>View CloudFront metrics in dashboard</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/monitoring/view-dashboard/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/monitoring/view-dashboard/readme/</guid><description>CloudFront Extensions provides two kinds of monitoring: non-real time monitoring and realtime monitoring. You can choose one of them to deploy and use it to view CloudFront traffic metrics via built-in metrics dashboard or via API calls. The dashboard uses CloudFront standard log or realtime log to get the metrics.
Go to CloudFront Extensions console. In the navigation panel, under Monitoring, choose CloudFront traffic. Choose the sample website distribution (you can find its domain name in CFExtSampleWorkshop stack), select a time range when the sample website has traffic.</description></item><item><title>Check Stack Output</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/prerequisite/sample-check/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/prerequisite/sample-check/readme/</guid><description>Once the CloudFormation deployment is finished, please review the output tab.
Navigate to CloudFormation console.
Open CFExtSampleWorkshop stack (or the one you named during the CloudFormation installation).
Select the Outputs tab of the menu.
You will see 5 outputs such as below. Keep this page open, or capture them separately. Record the DistributionID and DemoDefaultUrl since we will use them in further section.</description></item><item><title>Check the function on sample website</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/repo/check-device-ext/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/repo/check-device-ext/readme/</guid><description>Navigate to CloudFormation console.
Open CFExtSampleWorkshop stack (or the one you named during the CloudFormation installation).
Select the Outputs tab of the menu.
Open DemoDefaultUrl, the web page should look like this. In the browser, open developer tool (eg. by clicking View &amp;gt; Developer &amp;gt; Developer Tools in Chrome, Tools &amp;gt; Browser Tools &amp;gt; Web Developer Tools in Firefox).
Choose Toggle device toolbar to simulate a mobile device.</description></item><item><title>Create SSL certificate</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/distribution/ssl/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/distribution/ssl/readme/</guid><description>The sample website can be accessed by inputing xxx.cloudfront.net in the browser currently. It is not an user-friendly name and you would like to give the website a meaningful name such as www.amazon.com. In this section, you will associate a domain name with the sample website. After association, you can access the sample website by the domain name.
You can use CloudFront Extensions to automatically create or import SSL Certificates and associate them to new CloudFront distributions.</description></item><item><title>Reporting issues</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/contribution/bug-report/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/contribution/bug-report/readme/</guid><description>Issues can be used to keep track of bugs, enhancements, or other requests. Before creating an issue, make sure you have read the contributing guidelines
To create an issue by doing the following
Under your repository, choose Issues tab and choose New issue Choose the issue type Bug (software defects) Feature request General issue (non-software defects such as document issue, process issue) Security vulnerability Fill in each field defined in the template and submit the issue</description></item><item><title>Setup monitoring</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/deploy/setup-monitoring/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/deploy/setup-monitoring/readme/</guid><description>In this section, we will enable CloudFront standard log and monitor CloudFront metrics on CloudFront Extensions console.
After deployment, you will see two CloudFormation stacks.
Setup monitoring by following steps:
Choose the Outputs tab of the nested stack (the stack whose name contains NonRealtimeNestedStack).
You will find the S3 bucket in S3buckettostoreCloudFrontlogs. Copy the S3 bucket name. Go to CloudFront console, choose the distribution created in CFExtSampleWorkshop stack (you can find the distribution id in the Outputs tab).</description></item><item><title>Apply Snapshot to modify configuration</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/distribution/apply-snapshot/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/distribution/apply-snapshot/readme/</guid><description>In last section, you associated a SSL certificate with the sample website and add an alternative domain name. The CloudFront distribution is changed, you can see the config difference and rollback the changes using snapshot.
View configuration difference Navigate to CloudFront Extensions console (you can find the link in the Outputs tab of cloudFrontExtensionsConsole stack).
In the navigation panel, under Distribution management, choose Snapshot. Choose the sample website distribution (you can find it in Outputs tab of CFExtSampleWorkshop stack).</description></item><item><title>Setup SSL notification</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/deploy/setup-ssl/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/deploy/setup-ssl/readme/</guid><description>You can use CloudFront Extensions to automatically create or import SSL Certificates and associate them to new CloudFront distributions. Before that, you need to setup SSL notification.
After deployment, you will receive an email with the title AWS Notification - Subscription Confirmation
Setup SSL notification by following steps:
Click Confirm subscription link in the email. It will go to a web page which indicates the subscription is confirmed.</description></item><item><title>Specify a query result location for Athena</title><link>https://awslabs.github.io/aws-cloudfront-extensions/workshop/prerequisite/setup-athena/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://awslabs.github.io/aws-cloudfront-extensions/workshop/prerequisite/setup-athena/readme/</guid><description>!!! Note &amp;ldquo;Note&amp;rdquo;
The solution uses Athena to query CloudFront logs, **if this is the first time you use Athena in the region**, you are required to specify the location for query results in Athena, or else you can skip this section. Before you can run a query, a query result bucket location in Amazon S3 must be specified.
To specify a client-side setting query result location using the Athena console</description></item></channel></rss>