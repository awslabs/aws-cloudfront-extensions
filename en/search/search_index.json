{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>CloudFront Extensions is an out-of-box solution for advanced Amazon CloudFront users to manage dozens of CloudFront distributions regularly. The solution provides a set of management and automation functions and helps customers to improve the overall operational efficiency when using Amazon Edge products.</p> <p>The solution has the following major features:</p> <ul> <li> <p>Monitoring: You can monitor CloudFront traffic such as cache hit ratio, bandwidth, and status code. For more information, refer to Monitoring.</p> </li> <li> <p>Distribution management: You can save one specific CloudFront distribution configuration as a snapshot, compare different snapshots and apply a snapshot to other distributions; audit all CloudFront distribution changes which will be saved automatically; automate the process from requesting new certificate or importing existing SSL certificates to CloudFront distributions. For more information, refer to Distribution Management.</p> </li> <li> <p>Extension repository: You can deploy commonly used out-of-box extensions such as Lambda@Edge functions, CloudFront functions, and CloudFormation templates through friendly user interface. You can use these extensions without any programming, and customize them to fit your specific needs. For more information, refer to Extensions Repository.</p> </li> </ul> <p>After deploying the solution, you can perform tasks on a web console or use the functions via APIs. For more information, see API Reference Guide.</p> <p>This implementation guide describes architectural considerations and configuration steps for deploying CloudFront Extensions in the AWS Cloud. It includes links to an AWS CloudFormation template that launches and configures the services required to deploy this solution using AWS best practices for security and availability.</p> <p>The guide is intended for IT architects, and developers who have practical experience architecting in the AWS Cloud.</p>"},{"location":"additional-resources/","title":"Additional resources","text":"<ul> <li>Amazon API Gateway</li> <li>Amazon Athena</li> <li>Amazon CloudFront</li> <li>Amazon CloudFront Functions</li> <li>AWS CloudFormation</li> <li>Amazon Cognito</li> <li>Amazon DynamoDB</li> <li>AWS Glue</li> <li>Amazon Kinesis</li> <li>Amazon Kinesis Data Firehose</li> <li>AWS Lambda</li> <li>AWS Lambda@Edge</li> <li>AWS Shield</li> <li>Amazon Simple Storage Service (Amazon S3)</li> <li>AWS WAF</li> </ul>"},{"location":"architecture/","title":"Architecture overview","text":"<p>Deploying CloudFront Extensions solution with the default parameters builds the following environment in the AWS Cloud.</p> <p></p> <p>Figure 1: CloudFront Extensions architecture</p> <ol> <li>Amazon CloudFront distributes the solution frontend web UI assets hosted in Amazon S3 bucket.</li> <li>Amazon Cognito user pool provides authentication for backend.</li> <li>Amazon AppSync provides the backend GraphQL APIs.</li> <li>Amazon API Gateway provides the backend RESTful APIs for SSL certificates and Monitoring features.</li> <li>Amazon DynamoDB stores the solution related information as backend database.</li> <li>AWS Lambda interacts with other Amazon Services to process core logic of monitoring, SSL certificates and extensions repository, and obtains information updated in DynamoDB tables.</li> <li>AWS Step Functions orchestrate workflows for creating ACM certificates, importing existed certificates and creating CloudFront distributions. </li> <li>Extensions are shown in Extensions repository. AWS CloudFormation and AWS Serverless Application Repository will be triggered if you want to deploy an extension into your AWS account.</li> <li>AWS Lambda stores CloudFront configuration changes into S3 bucket, and you can view the difference between two CloudFront configuration versions and apply the configuration.</li> <li>Amazon Athena queries CloudFront standard logs or real-time logs to get CloudFront metrics and output it by API Gateway. You can also view the metrics by monitoring dashboard.</li> </ol>"},{"location":"cost/","title":"Cost","text":"<p>You are responsible for the cost of the AWS services used while running this solution. We recommend creating a budget through AWS Cost Explorer to help manage costs. For full details, refer to the pricing webpage for each service used in this solution.</p>"},{"location":"cost/#cloudfront-configuration-snapshot","title":"CloudFront configuration snapshot","text":"<p>As of August 2022, if the configuration of CloudFront distributions are changed 30 times and create 10 snapshots, the estimated cost of using this solution is $0.63 per month in the US East (N. Virginia) Region (excludes free tier).</p> Service Dimensions Cost/Month AWS Lambda 200 invocationsaverage 60 seconds and 256MB memory $0.01 AWS Appsync 100 requests $0.0004 Amazon Simple Storage Service (S3) 5GB $0.12 Amazon DynamoDB 2GB data storage $0.50 Total ~$0.63"},{"location":"cost/#ssl-certificates","title":"SSL certificates","text":"<p>As of August 2022, if user create 2000 ACM certificates and 2000 CloudFront distribution per month, the estimated cost of using this solution is $26.68 per month in the US East (N. Virginia) Region (excludes free tier).</p> Service Dimensions Cost/Month AWS Lambda 11140 invocationsaverage 500 millisecond and 256MB memory $0 Amazon API Gateway 5000 requests $0 AWS Appsync 5000 requests $0.02 Step Functions 8 x 500 = 4000 states transitions $0 Amazon DynamoDB 1000MB data storage $26.64 Amazon Simple Storage Service (S3) 1GB storage $0.02 Total $26.68"},{"location":"cost/#non-real-time-monitoring-with-cloudfront-standard-logs","title":"Non-real time monitoring with CloudFront standard logs","text":"<p>As of August 2022, to monitor 10 metrics for one CloudFront distribution which has 60 records (2KB) every second, the estimated cost of using this solution is $22.40 per month in the US East (N. Virginia) Region (excludes free tier).</p> Service Dimensions Cost/Month AWS Lambda 86K invocationsaverage 500 millisecond and 512MB memory $0.38 Amazon API Gateway 86K requests $0.09 Amazon Athena 86K queries35MB data scanned per query ~$14.42 Amazon Simple Storage Service (S3) 295GB $6.79 Amazon DynamoDB 1GB data storage2 writes per minute1 read every 2 minutes $0.72 Total $22.40"},{"location":"cost/#real-time-monitoring-with-cloudfront-real-time-logs","title":"Real time monitoring with CloudFront real-time logs","text":"<p>As of August 2022, to monitor 10 metrics for one CloudFront distribution which has 60 records (2KB) every second, the estimated cost of using this solution is $88.56 per month in the US East (N. Virginia) Region (excludes free tier).</p> Service Dimensions Cost/Month Amazon Kinesis Data Firehose 60 records(2KB)/secondDynamic Partitioning enabled $36.9 Amazon Kinesis Data Stream 1 shard60 records(2KB)/second168 hours data retention $27.76 AWS Lambda 86K invocationsaverage 500 millisecond and 512MB memory $0.38 Amazon API Gateway 86K requests $0.09 Amazon Athena 86K queries35MB data scanned per query $14.42 Amazon Simple Storage Service (S3) 295GB $6.79 Amazon Cognito 30 MAU $1.5 Amazon DynamoDB 1GB data storage2 writes per minute1 read every 2 minutes $0.72 Total $88.56"},{"location":"cost/#pre-warming","title":"Pre-warming","text":""},{"location":"cost/#example-1-pre-warm-500-resources-daily-the-size-of-each-resource-is-500mb","title":"Example 1: Pre-warm 500 resources daily, the size of each resource is 500MB","text":"<p>As of August 2022, the estimated cost of using this solution is $171.27 per month in the US East (N. Virginia) Region (excludes free tier).</p> Service Dimensions Cost/Month Amazon EC2 Launch 50 EC2 spot instance (c6g.large), run 2 hours to pre-warm 500 URI daily150GB EBS $165.97 Amazon Lambda 45K requests256MB memoryARM64 $3.67 Amazon API Gateway 30K requestsREST API $0.03 Amazon Simple Queue Service Standard queue2GB DTO $0.18 Amazon DynamoDB 2GB data storage15K writes15K reads $0.52 Amazon CloudWatch 1 metric and alarm $0.90 Total $171.27"},{"location":"cost/#example-2-pre-warm-200-resources-in-one-month-the-size-of-each-resource-is-1gb","title":"Example 2: Pre-warm 200 resources in one month, the size of each resource is 1GB","text":"<p>As of August 2022, the estimated cost of using this solution is $11.78 per month in the US East (N. Virginia) Region (excludes free tier).</p> Service Dimensions Cost/Month Amazon EC2 m5dn.xlarge Spot instance150GB EBS $10.59 Amazon Lambda 28 requests256MB memoryARM64 $0.01 Amazon API Gateway 24 requestsREST API $0.0001 Amazon Simple Queue Service Standard queue1GB DTO $0.02 Amazon DynamoDB 1GB data storage2K writes200 reads $0.25 Amazon CloudWatch 1 metric and alarm $0.90 Total $11.78"},{"location":"deployment/","title":"Deploy the solution","text":"<p>Before you launch the solution, review the architecture, supported regions, and other considerations discussed in this guide. Follow the step-by-step instructions in this section to configure and deploy the solution into your account.</p>"},{"location":"deployment/#deploy-the-web-console","title":"Deploy the Web Console","text":"<p>Time to deploy: Approximately 15 minutes</p>"},{"location":"deployment/#deployment-steps","title":"Deployment steps","text":"<ol> <li> <p>Sign in to the AWS Management Console and select the button to launch the CloudFormation template. You can also download the template as a starting point for your own implementation.</p> <p></p> </li> <li> <p>The template launches in the US East (N. Virginia) Region by default. To launch the solution in a different AWS Region, use the Region selector in the console navigation bar. See regional deployment for all the supported regions. </p> </li> <li> <p>Under Parameters, review the parameters for the template, and modify them as necessary.</p> Parameter Default value Description Initial User Email - The initial user email for the web console. Initial User Name - The initial username for the web console. Initial User Password - The Initial Password for the web console. Notification Email - Email address to receive SSL certificates notification. CloudFront Log Type no You can set it to <code>yes-Realtime</code> to get monitoring metrics from realtime loge, or set it to<code>yes-Non-Realtime</code> to get monitoring metrics from standard log. By default, it is <code>no</code>, which means it will not deploy monitoring feature. See Monitoring for more information. CloudFront Domain List - The CloudFront domain name list. Use comma as separation for multiple domain names. Use 'ALL' to monitoring all domains in your AWS account Log Keeping Days 120 The number of days to keep CloudFront logs in the S3 bucket. Delete Log false You can set it to <code>true</code> to delete original CloudFront standard logs in S3 bucket. By default, it is <code>false</code>. This only applies to non-realtime monitoring Use Start Time false You can set it to <code>true</code> if the Time in metric data is based on start time, or set it to <code>false</code> if the Time in metric data is based on end time. This only applies to non-realtime monitoring </li> <li> <p>Choose Next.</p> </li> <li>On the Configure stack options page, you can specify tags (key-value pairs) for resources in your stack and set additional options, and then choose Next.</li> <li>On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create AWS Identity and Access Management (IAM) resources and any additional capabilities required.</li> <li>Choose Create to deploy the stack. </li> </ol> <p>You can view the status of the stack in the CloudFormation Console in the Status column. You should receive a CREATE_COMPLETE status in approximately 15 minutes.</p>"},{"location":"deployment/#follow-up-actions","title":"Follow-up Actions","text":"<p>To see details for the stack resources, choose the Outputs tab.</p> <ul> <li>You will find CloudFront Extensions console URL in WebConsoleCloudFrontURL. The initial user name and password are defined in InitialUserName and InitialUserPassword parameters when you deploy the CloudFormation stack. The API keys of snapshot and SSL certificates can be found in Outputs tab, For testing your API with API key, see test usage plans.</li> <li>As for monitoring API, the solution will create a nested stack whose name contains NonRealtimeNestedStack or RealtimeNestedStack, and you will find the monitoring metric API and API key in the Outputs tab of the nested stack.</li> </ul> <p>The CloudFormation stack deploys below modules:</p> <ul> <li>Monitoring: If you set Monitoring to yes-Realtime or yes-Non-Realtime, it will deploy the monitoring feature. See monitoring for more details. </li> <li>Distribution management: you can manage snapshots and SSL certificates. See distribution management for more details. </li> <li>Extensions repository: you can deploy a set of ready-to-use extensions (Lambda@Edge functions, CloudFront functions, CloudFormation templates). See extensions repository for more details.  </li> </ul>"},{"location":"deployment/#deploy-lambdaedge-cloudfront-functions-collection","title":"Deploy Lambda@Edge &amp; CloudFront Functions collection","text":"<p>Time to deploy: Approximately 3 minutes</p>"},{"location":"deployment/#deployment-overview","title":"Deployment overview","text":"<p>Click below deploy button to deploy this solution in your AWS account. As for Lambda@Edge functions, you can also find and configure them by searching aws-cloudfront-extensions in the Amazon SAR (Serverless Application Repository).</p>"},{"location":"deployment/#lambdaedge","title":"Lambda@Edge","text":"Name Deploy Authentication with Cognito Pre-warm Resize picture Anti-hotlinking Adding security header Serve content based on device type Cross origin resource sharing Modify response status code Modify response header Access origin by weight rate Failover to alternative origin Support 302 from origin Standardize query string Authentication with Alibaba Cloud Rewrite host for custom origin Serverless load balancer Custom response with new URL"},{"location":"deployment/#cloudfront-functions","title":"CloudFront Functions","text":"Name Deploy Add security headers Cross origin resource sharing Add cache control headers Add origin headers Add true client IP headers Redirect based on country Default dir index Verify JSON web token Customize request host"},{"location":"deployment/#lambdaedge-deployment-in-sar","title":"Lambda@Edge Deployment in SAR","text":"<ol> <li>Access the AWS Serverless Application Repository page in the Console.</li> <li>Check Show apps that create custom IAM roles or resource policies.</li> <li>Search aws-cloudfront-extensions to display all extensions, and choose an application (for example, serving-based-on-device) and click Deploy.</li> <li>On the application detail page, check I acknowledge that this app creates custom IAM roles.</li> <li>Choose Deploy. After the deployment is completed, it will redirect to Lambda application page, and you can deploy it to Lambda@Edge.</li> </ol>"},{"location":"notices/","title":"Notices","text":"<p>Customers are responsible for making their own independent assessment of the information in this document. This document: (a) is for informational purposes only, (b) represents Amazon Web Services current product offerings and practices, which are subject to change without notice, and (c) does not create any commitments or assurances from Amazon Web Services and its affiliates, suppliers or licensors. Amazon Web Services products or services are provided \u201cas is\u201d without warranties, representations, or conditions of any kind, whether express or implied. Amazon Web Services responsibilities and liabilities to its customers are controlled by Amazon Web Services agreements, and this document is not part of, nor does it modify, any agreement between Amazon Web Services and its customers.</p> <p>The CloudFront Extensions solution is licensed under the terms of the Apache License Version 2.0 available at The Apache Software Foundation.</p>"},{"location":"regions/","title":"Design considerations","text":""},{"location":"regions/#regional-deployment","title":"Regional deployment","text":"<p>As of August 2022, this solution is supported in the following AWS Regions: </p> Region Name Region ID US East (N. Virginia) us-east-1 US East (Ohio) us-east-2 US West (N. California) us-west-1 US West (Oregon) us-west-2 Asia Pacific (Mumbai) ap-south-1 Asia Pacific (Tokyo) ap-northeast-1 Asia Pacific (Seoul) ap-northeast-2 Asia Pacific (Singapore) ap-southeast-1 Asia Pacific (Sydney) ap-southeast-2 Canada (Central) ca-central-1 Europe (Ireland) eu-west-1 Europe (London) eu-west-2 Europe (Paris) eu-west-3 Europe (Stockholm) eu-north-1 Europe (Frankfurt) eu-central-1 South America (S\u00e3o Paulo) sa-east-1"},{"location":"regions/#quotas","title":"Quotas","text":"<p>There are quotas on using SSL/TLS certificates with CloudFront. Refer to the documentation for more details. </p> Item Quota Remarks Maximum number of certificates per CloudFront distribution 1 Maximum number of certificates that you can import into ACM 2500 Maximum number of certificates per AWS account (dedicated IP addresses only) 2 One for everyday use and one for when you need to rotate certificates for multiple distributions. Using the same certificate for CloudFront distributions that were created by using different AWS accounts No Using the same certificate for CloudFront and for other AWS services Yes"},{"location":"revisions/","title":"Revisions","text":"Date Change March 2021 Initial release of version 1.0.0 July 2021 Released version 1.1.0 1. Added 12 Lambda@Edge functions and 9 CloudFront Functions;  2. Added CloudFront security automation with AWS WAF and AWS Shield Advanced December 2021 Released version 1.2.0  1. Added 10 Lambda@Edge functions and 2 CloudFront functions February 2022 Released version 1.3.0 1. Added a CloudFront real-time log monitoring API which provides performance metrics August 2022 Released version 2.0.0 1. Added a user-friendly web console March 2023 Released version 2.1.0 1. Optimized the prewarm extension library"},{"location":"security/","title":"Security","text":"<p>When you build systems on AWS infrastructure, security responsibilities are shared between you and Amazon Web Services. This shared model reduces your operational burden because Amazon Web Services operates, manages, and controls the components including the host operating system, the virtualization layer, and the physical security of the facilities in which the services operate. For more information about Amazon Web Services security, visit AWS Cloud Security.</p>"},{"location":"security/#iam-roles","title":"IAM roles","text":"<p>AWS Identity and Access Management (IAM) roles allow customers to assign granular access policies and permissions to services and users on the AWS Cloud. This solution creates IAM roles that grant the solution\u2019s access between the solution components.</p>"},{"location":"source/","title":"Source code","text":"<p>Visit our GitHub repository to download the templates and scripts for this solution. The CloudFront Extensions template is generated using the Amazon Cloud Development Kit (CDK). Refer to the README.md file for additional information.</p>"},{"location":"template/","title":"Template","text":"<p>To automate deployment, this solution uses the following AWS CloudFormation templates, which you can download before deployment:</p>"},{"location":"template/#cloudfront-extensions-console","title":"CloudFront Extensions Console","text":"<p>CloudFrontExtnConsoleStack.template.json: Use this template to launch the solution and all associated components. The default configuration deploys monitoring dashboard, distribution management and extension repository, but you can customize the template to meet your specific needs.</p>"},{"location":"trouble-shooting/","title":"Troubleshooting Errors","text":"<p>The following help you to fix errors or problems that you might encounter when using CloudFront Extensions.</p>"},{"location":"trouble-shooting/#ssl-certificates","title":"SSL Certificates","text":""},{"location":"trouble-shooting/#failed-to-request-acm-certificate","title":"Failed to request ACM certificate","text":"<p>When you \"request new certificates\" from Web UI or api, you may find job failed, following is an example screenshot:  The detailed error message will show up in the Step section in red color. You can see in this case the error is caused by domain name is not valid which caused backend request ACM certificate fail.</p>"},{"location":"uninstall/","title":"Uninstall the solution","text":"<p>To uninstall the CloudFront Extensions solution, you must delete the AWS CloudFormation stack. </p> <p>You can use either the AWS Management Console or the AWS Command Line Interface (AWS CLI) to delete the CloudFormation stack.</p>"},{"location":"uninstall/#uninstall-the-stack-using-the-aws-management-console","title":"Uninstall the stack using the AWS Management Console","text":"<ol> <li>Sign in to the AWS CloudFormation console.</li> <li>Select this solution\u2019s installation parent stack.</li> <li>Choose Delete.</li> </ol>"},{"location":"uninstall/#uninstall-the-stack-using-aws-command-line-interface","title":"Uninstall the stack using AWS Command Line Interface","text":"<p>Determine whether the AWS CLI is available in your environment. For installation instructions, refer to What Is the AWS Command Line Interface in the AWS CLI User Guide. After confirming that the AWS CLI is available, run the following command.</p> <pre><code>aws cloudformation delete-stack --stack-name &lt;installation-stack-name&gt; --region &lt;aws-region&gt;\n</code></pre>"},{"location":"workshop/","title":"Workshop","text":""},{"location":"workshop/#about-the-workshop","title":"About the workshop","text":"<ul> <li>This workshop is targeted to builders (e.g. software development engineers, solutions architects, devops engineers, cloud engineers etc.)</li> <li>AWS Region used in this workshop: us-east-1</li> <li>Expected completion time: 2 hours</li> </ul>"},{"location":"workshop/#what-you-will-learn","title":"What you will learn","text":"<ul> <li>How to implement customized function by deploying an extension on Amazon CloudFront Extensions console.</li> <li>How to save and apply the configuration of a CloudFront distribution on Amazon CloudFront Extensions console.</li> <li>How to create SSL certificates on Amazon CloudFront Extensions console.</li> <li>How to monitor CloudFront distribution metrics on Amazon CloudFront Extensions console.</li> </ul>"},{"location":"workshop/#what-you-will-do-during-this-workshop","title":"What you will do during this workshop","text":"<ul> <li>Deploy Amazon CloudFront Extensions solution and a sample website in your AWS account (using CloudFormation).</li> <li>Use Amazon CloudFront Extensions console to fulfill above functional requirements and non-functional requirements.</li> </ul>"},{"location":"workshop/#start-the-workshop","title":"Start the workshop","text":"<p>Go to workshop page to start the workshop.</p>"},{"location":"api-reference-guide/distribution-management/","title":"Distribution management","text":""},{"location":"api-reference-guide/distribution-management/#snapshot-related-api","title":"Snapshot related API","text":"<ul> <li>create_snapshot</li> <li>delete_snapshot</li> <li>list_snapshots</li> <li>diff_cloudfront_snapshot</li> <li>get_snapshot_link</li> <li>apply_snapshot</li> <li>config_snapshot_tag_update</li> </ul>"},{"location":"api-reference-guide/distribution-management/#ssl-certificate-related-api","title":"SSL Certificate related API","text":"<ul> <li>import-create-ssl</li> <li>cert_list</li> <li>list_ssl_certification_with_jobId</li> <li>list_cloudfront_arn_with_jobId </li> <li>list_ssl_jobs</li> <li>get_ssl_job</li> </ul>"},{"location":"api-reference-guide/extension-repository/","title":"Extensions repository","text":""},{"location":"api-reference-guide/extension-repository/#pre-warming","title":"Pre-warming","text":"<ul> <li>HTTP request method: <code>POST</code></li> <li>Request</li> </ul> <pre><code>{\n\"url_list\": [\n\"https://{host}/index.html\",\n\"https://{host}/images/demo.png\"\n],\n\"cf_domain\": \"d3hvi5wvyqg3lv.cloudfront.net\", // Optional, if not set cf_domain, it will find cf_domain according to CName in the url list\n\"region\": [\"ATL56-C1\", \"DFW55-C3\"]|\"all\"|\"apac\"|\"au\"|\"ca\"|\"sa\"|\"eu\"|\"jp\"|\"us\" // \"all\" to prewarm all pop node\n}\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>url_list: The list of urls for prewarm.</li> <li>cf_domain: CloudFront domain name which ends with cloudfront.net. If not set, it will find cf_domain according to CNAME in the url list.</li> <li>target_type: The region type for prewarm. You can specify 3 types of value. The region field should change according to this field.</li> <li>pop\uff1aprewarm by PoP(Points of Presence)\uff0cthe value of region field is a list of PoP(Points of Presence)</li> <li>country\uff1aprewarm by country\uff0cthe value of region field is a list of country</li> <li>region\uff1aprewarm by region\uff0cthe value of region field is a list of region</li> <li>region: The region for prewarm. This field should change according to the target_type field.</li> <li>target_type = \"pop\": accept a PoP(Points of Presence) list, prewarm in the PoP(Points of Presence) location in the list\uff0cfor example:[\"ATL56-C1\", \"DFW55-C3\"]</li> <li>target_type = \"region\": accept \"all\" or a region list, prewarm in all regions or a specific region\uff0cfor example:\"all\"|[\"apac\", \"au\"], the supported values are\uff1a<ul> <li>apac\uff1a Asia-Pacific</li> <li>au\uff1a Australia</li> <li>ca\uff1a Canada</li> <li>sa\uff1a South Africa</li> <li>eu\uff1a Europe</li> <li>jp\uff1a Japan</li> <li>us\uff1a United States</li> <li>cn:  China(Chinese mainland prewarm can only be used by deploying this solution in Chinese mainland regions, otherwise it will always fail.)</li> </ul> </li> <li>target_type = \"country\": accept \"all\" or a country list: prewarm in all countries or a specific country\uff0cfor example:\"all\"|[\"india\", \"new_zealand\"], the supported values are\uff1a<ul> <li>india\uff1a India</li> <li>japan\uff1a Japan</li> <li>new_zealand\uff1a New Zealand</li> <li>australia\uff1aAustralia</li> <li>malaysia\uff1a Malaysia</li> <li>china\uff1a China(Currently, Hong Kong is supported\uff0cChinese mainland prewarm can only be used by deploying this solution in Chinese mainland regions)</li> <li>indonesia\uff1aIndonesia</li> <li>philippines\uff1aPhilippines</li> <li>singapore\uff1aSingapore</li> <li>thailand\uff1a Thailand</li> <li>vietnam\uff1aVietnam</li> <li>south_korea\uff1a South Korea</li> </ul> </li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"requestID\": \"4f780687-9774-48cd-bd7d-db836abf45af\"\n}\n</code></pre> <ul> <li>Response parameters</li> </ul> <p><code>requestID</code>: The request ID, which you can use in PrewarmStatus API to get the prewarm status.</p>"},{"location":"api-reference-guide/extension-repository/#prewarmstatus","title":"PrewarmStatus","text":"<ul> <li>HTTP request method: <code>GET</code></li> <li>Request</li> </ul> <pre><code>{\n\"requestID\": \"4f780687-9774-48cd-bd7d-db836abf45af\"\n}\n</code></pre> <ul> <li>Request body parameters</li> </ul> <p><code>requestID</code>: a unique ID for each request.</p> <ul> <li>Response</li> </ul> <pre><code>{\n\"status\": \"COMPLETED\" | \"IN_PROGRESS\" | \"TIMEOUT\" | \"FAILED\",\n\"total\": 20,\n\"completed\": 17,\n\"inProgress\": 3,\n\"failedUrl\": [\"https://www.example.com/images/demo.png\"]\n\"inProgressUrl\": [\"https://www.example.com/images/demo1.png\"]\n\"successUrl\": [\"https://www.example.com/images/xx.png\"]\n}\n</code></pre> <ul> <li>Response parameters</li> </ul> <p><code>status</code>: the overall prewarm status</p> <p><code>total</code>: total url count to pre-warm</p> <p><code>completed</code>: the count of urls which are prewarmed</p> <p><code>inProgress</code>: the count of urls which are being prewarmed</p> <p><code>failedUrl</code>: the list of urls which are failed to prewarm</p> <p><code>inProgressUrl</code>: the list of urls which are being prewarmed</p> <p><code>successUrl</code>: the list of urls which are successfully prewarmed</p>"},{"location":"api-reference-guide/monitoring/","title":"Monitoring","text":"<p>CloudFront real-time log analysis and standard log analysis have the same API format. The metric data are collected every 5 minutes, you can customize it by update the metricCollector Lambda functions. </p>"},{"location":"api-reference-guide/monitoring/#nonrealtimemonitoringmetrics","title":"NonRealTimeMonitoringMetrics","text":"<ul> <li>HTTP request method: <code>GET</code></li> <li>Request</li> </ul> <pre><code>{\n\"StartTime\": \"2021-10-21 11:00:00\",\n\"EndTime\": \"2021-10-21 11:00:00\",\n\"Metric\": \"all\" | \"request\" | \"requestOrigin\" | \"statusCode\" | \"statusCodeOrigin\" | \"chr\" | \"chrBandWidth\" | \"bandwidth\" | \"bandwidthOrigin\" | \"topNUrlRequests\" | \"topNUrlSize\" | \"downstreamTraffic\"\n}\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>StartTime: start time to get the metric data</li> <li>EndTime: end time to get the metric data</li> <li>Metric: metric type, use <code>all</code> if you want to get all metrics</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"Response\": {\n\"Data\": [\n{\n\"CdnData\": [\n{\n\"Metric\": \"request\",\n\"DetailData\": [\n{\n\"Time\": \"2022-06-23 12:50:00\",\n\"Value\": \"41\"\n},\n{\n\"Time\": \"2022-06-23 12:55:00\",\n\"Value\": \"45\"\n},\n{\n\"Time\": \"2022-06-23 13:00:00\",\n\"Value\": \"39\"\n}\n]\n}\n]\n}\n],\n\"RequestId\": \"05228fbe-65b1-4670-85ba-0d7307ece749\",\n\"Interval\": \"5min\"\n}\n}\n</code></pre> <ul> <li> <p>Parameters</p> <ul> <li>CdnData: CloudFront metric data</li> <li>Metric: the metric type</li> <li>DetailData: detailed metric data in each timestamp</li> <li>RequestId: a unique ID for each request</li> <li>Interval: the interval for collecting metric data, and the default value is 5 minutes</li> </ul> </li> </ul>"},{"location":"api-reference-guide/monitoring/#realtimemonitoringmetrics","title":"RealTimeMonitoringMetrics","text":"<ul> <li>HTTP request method: <code>GET</code></li> <li>Request</li> </ul> <pre><code>{\n\"StartTime\": \"2021-10-21 11:00:00\",\n\"EndTime\": \"2021-10-21 11:00:00\",\n\"Metric\": \"all\" | \"request\" | \"requestOrigin\" | \"statusCode\" | \"statusCodeOrigin\" | \"chr\" | \"chrBandWidth\" | \"bandwidth\" | \"bandwidthOrigin\" | \"downloadSpeed\" | \"downloadSpeedOrigin\" | \"topNUrlRequests\" | \"topNUrlSize\" | \"downstreamTraffic\"\n}\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>StartTime: start time to get the metric data</li> <li>EndTime: end time to get the metric data</li> <li>Metric: metric type, use <code>all</code> if you want to get all metrics</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"Response\": {\n\"Data\": [\n{\n\"CdnData\": [\n{\n\"Metric\": \"request\",\n\"DetailData\": [\n{\n\"Time\": \"2022-06-23 12:50:00\",\n\"Value\": \"41\"\n},\n{\n\"Time\": \"2022-06-23 12:55:00\",\n\"Value\": \"45\"\n},\n{\n\"Time\": \"2022-06-23 13:00:00\",\n\"Value\": \"39\"\n}\n]\n}\n]\n}\n],\n\"RequestId\": \"05228fbe-65b1-4670-85ba-0d7307ece749\",\n\"Interval\": \"5min\"\n}\n}\n</code></pre> <ul> <li> <p>Parameters</p> <ul> <li>CdnData: CloudFront metric data</li> <li>Metric: the metric type</li> <li>DetailData: detailed metric data in each timestamp</li> <li>RequestId: a unique ID for each request</li> <li>Interval: the interval for collecting metric data, and the default value is 5 minutes</li> </ul> </li> </ul>"},{"location":"api-reference-guide/monitoring/#more-api-examples","title":"More API examples","text":""},{"location":"api-reference-guide/monitoring/#uri-format","title":"URI format","text":"<p>https://domain-name.com/prod/metric?StartTime=2021-10-21%2011:00:00&amp;EndTime=2021-10-21%2011:30:00&amp;Metric=all&amp;Domain=example.cloudfront.net</p>"},{"location":"api-reference-guide/monitoring/#response","title":"Response","text":"<p>The metric data are collected every 5 minutes, you can customize it by update the metricCollector Lambda functions</p>"},{"location":"api-reference-guide/monitoring/#request-number","title":"Request number","text":"<pre><code>{\n\"Response\": {\n\"Data\": [\n{\n\"CdnData\": [\n{\n\"Metric\": \"request\",\n\"DetailData\": [\n{\n\"Time\": \"2021-10-21 11:05:00\",\n\"Value\": \"430\"\n},\n{\n\"Time\": \"2021-10-21 11:10:00\",\n\"Value\": \"124\"\n},\n{\n\"Time\": \"2021-10-21 11:15:00\",\n\"Value\": \"355\"\n},\n{\n\"Time\": \"2021-10-21 11:20:00\",\n\"Value\": \"65\"\n},\n{\n\"Time\": \"2021-10-21 11:25:00\",\n\"Value\": \"361\"\n},\n{\n\"Time\": \"2021-10-21 11:30:00\",\n\"Value\": \"83\"\n}\n]\n}\n]\n}\n],\n\"RequestId\": \"7569bbc3-a3ec-4ff3-94ec-f81a63ff5587\",\n\"Interval\": \"5min\"\n}\n}\n</code></pre>"},{"location":"api-reference-guide/monitoring/#bandwidth","title":"Bandwidth","text":"<pre><code>{\n\"Response\": {\n\"Data\": [\n{\n\"CdnData\": [\n{\n\"Metric\": \"bandwidth\",\n\"DetailData\": [\n{\n\"Time\": \"2021-10-21 11:05:00\",\n\"Value\": \"3434275\"\n},\n{\n\"Time\": \"2021-10-21 11:10:00\",\n\"Value\": \"1385221\"\n},\n{\n\"Time\": \"2021-10-21 11:15:00\",\n\"Value\": \"2248372\"\n},\n{\n\"Time\": \"2021-10-21 11:20:00\",\n\"Value\": \"410043\"\n},\n{\n\"Time\": \"2021-10-21 11:25:00\",\n\"Value\": \"2261034\"\n},\n{\n\"Time\": \"2021-10-21 11:30:00\",\n\"Value\": \"522360\"\n}\n]\n}\n]\n}\n],\n\"RequestId\": \"7569bbc3-a3ec-4ff3-94ec-f81a63ff5587\",\n\"Interval\": \"5min\"\n}\n}\n</code></pre>"},{"location":"api-reference-guide/monitoring/#download-speed","title":"Download speed","text":"<pre><code>{\n\"Response\": {\n\"Data\": [\n{\n\"CdnData\": [\n{\n\"Metric\": \"downloadSpeed\",\n\"DetailData\": [\n{\n\"Time\": \"2021-10-21 11:05:00\",\n\"Value\": {\n\"CN\": {\n\"Beijing Guanghuan Xinwang Digital\": {\n\"750K\": \"0\",\n\"250K\": \"0.25\",\n\"4M\": \"0\",\n\"3M\": \"0\",\n\"2M\": \"0\",\n\"1M\": \"0\",\n\"500K\": \"0.75\",\n\"Other\": \"0\"\n}\n},\n\"IT\": {\n\"G-Core Labs S.A.\": {\n\"750K\": \"0\",\n\"250K\": \"0\",\n\"4M\": \"1\",\n\"3M\": \"0\",\n\"2M\": \"0\",\n\"1M\": \"0\",\n\"500K\": \"0\",\n\"Other\": \"0\"\n},\n\"Aruba S.p.A.\": {\n\"750K\": \"0\",\n\"250K\": \"1\",\n\"4M\": \"0\",\n\"3M\": \"0\",\n\"2M\": \"0\",\n\"1M\": \"0\",\n\"500K\": \"0\",\n\"Other\": \"0\"\n},\n\"Seflow S.N.C. Di Marco Brame' &amp; C.\": {\n\"750K\": \"0\",\n\"250K\": \"1\",\n\"4M\": \"0\",\n\"3M\": \"0\",\n\"2M\": \"0\",\n\"1M\": \"0\",\n\"500K\": \"0\",\n\"Other\": \"0\"\n}\n},\n\"timestamp\": \"1634814300\",\n\"domain\": \"example.cloudfront.net\"\n}\n}\n]\n}\n]\n}\n],\n\"RequestId\": \"7569bbc3-a3ec-4ff3-94ec-f81a63ff5587\",\n\"Interval\": \"5min\"\n}\n}\n</code></pre>"},{"location":"api-reference-guide/monitoring/#chr","title":"CHR","text":"<pre><code>{\n\"Response\": {\n\"Data\": [\n{\n\"CdnData\": [\n{\n\"Metric\": \"chr\",\n\"DetailData\": [\n{\n\"Time\": \"2021-10-21 11:05:00\",\n\"Value\": \"94.83\"\n},\n{\n\"Time\": \"2021-10-21 11:10:00\",\n\"Value\": \"98.98\"\n},\n{\n\"Time\": \"2021-10-21 11:15:00\",\n\"Value\": \"95.35\"\n},\n{\n\"Time\": \"2021-10-21 11:20:00\",\n\"Value\": \"100.00\"\n},\n{\n\"Time\": \"2021-10-21 11:25:00\",\n\"Value\": \"99.02\"\n},\n{\n\"Time\": \"2021-10-21 11:30:00\",\n\"Value\": \"92.65\"\n}\n]\n}\n]\n}\n],\n\"RequestId\": \"7569bbc3-a3ec-4ff3-94ec-f81a63ff5587\",\n\"Interval\": \"5min\"\n}\n}\n</code></pre>"},{"location":"api-reference-guide/monitoring/#status-code","title":"Status code","text":"<pre><code>{\n\"Response\": {\n\"Data\": [\n{\n\"CdnData\": [\n{\n\"Metric\": \"statusCode\",\n\"DetailData\": [\n{\n\"Time\": \"2021-10-21 11:05:00\",\n\"Value\": [\n{\n\"StatusCode\": \"403\",\n\"Count\": \"80\"\n},\n{\n\"StatusCode\": \"200\",\n\"Count\": \"348\"\n},\n{\n\"StatusCode\": \"499\",\n\"Count\": \"2\"\n}\n]\n},\n{\n\"Time\": \"2021-10-21 11:10:00\",\n\"Value\": [\n{\n\"StatusCode\": \"200\",\n\"Count\": \"98\"\n},\n{\n\"StatusCode\": \"403\",\n\"Count\": \"26\"\n}\n]\n},\n{\n\"Time\": \"2021-10-21 11:15:00\",\n\"Value\": [\n{\n\"StatusCode\": \"200\",\n\"Count\": \"299\"\n},\n{\n\"StatusCode\": \"403\",\n\"Count\": \"56\"\n}\n]\n},\n{\n\"Time\": \"2021-10-21 11:20:00\",\n\"Value\": [\n{\n\"StatusCode\": \"200\",\n\"Count\": \"54\"\n},\n{\n\"StatusCode\": \"403\",\n\"Count\": \"11\"\n}\n]\n},\n{\n\"Time\": \"2021-10-21 11:25:00\",\n\"Value\": [\n{\n\"StatusCode\": \"403\",\n\"Count\": \"56\"\n},\n{\n\"StatusCode\": \"200\",\n\"Count\": \"304\"\n},\n{\n\"StatusCode\": \"499\",\n\"Count\": \"1\"\n}\n]\n},\n{\n\"Time\": \"2021-10-21 11:30:00\",\n\"Value\": [\n{\n\"StatusCode\": \"403\",\n\"Count\": \"15\"\n},\n{\n\"StatusCode\": \"200\",\n\"Count\": \"68\"\n}\n]\n}\n]\n}\n]\n}\n],\n\"RequestId\": \"7569bbc3-a3ec-4ff3-94ec-f81a63ff5587\",\n\"Interval\": \"5min\"\n}\n}\n</code></pre>"},{"location":"api-reference-guide/overview/","title":"Overview","text":""},{"location":"api-reference-guide/overview/#api-reference-guide","title":"API reference guide","text":"<p>You can use the functions through the web console or via API calls:</p> <ul> <li>Monitoring</li> <li>Extensions repository</li> <li>Distribution management</li> </ul>"},{"location":"api-reference-guide/snapshot/apply-snapshot/","title":"Apply snapshot","text":""},{"location":"api-reference-guide/snapshot/apply-snapshot/#apply_snapshot","title":"apply_snapshot","text":"<ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/snapshot/apply_snapshot?src_distribution_id= E3K4JDLORL0EUD&amp;target_distribution_ids=E3K4JDLORL0EUD&amp;snapshot_name= snapshot1\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>src_distribution_id: String</li> <li>target_distribution_ids: String (use \",\" to separate multiple target distribution)</li> <li>snapshot_name: String</li> </ul> </li> <li> <p>Response <pre><code>{\n\"statusCode\": 200,\n\"body\": \"succeed apply snapshot to target distributions\"\n}\n</code></pre></p> </li> </ul>"},{"location":"api-reference-guide/snapshot/config_snapshot_tag_update/","title":"Config snapshot tag update","text":""},{"location":"api-reference-guide/snapshot/config_snapshot_tag_update/#config_snapshot_tag_update","title":"config_snapshot_tag_update","text":"<ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/snapshot/config_snapshot_tag_update?distribution_id=E3K4JDLORL0EUD&amp;snapshot_name=snapshot1&amp;note=\u6d4b\u8bd5\u7248\u672csnapshot\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>distribution_id: String</li> <li>note: String</li> <li>snapshot_name: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"Attributes\": {\n\"note\": \"Test snapshot\"\n},\n\"ResponseMetadata\": {\n\"RequestId\": \"5GLP3OHORDIUPQPUFP50394ARJVV4KQNSO5AEMVJF66Q9ASUAAJG\",\n\"HTTPStatusCode\": 200,\n\"HTTPHeaders\": {\n\"server\": \"Server\",\n\"date\": \"Thu, 04 Aug 2022 05:14:11 GMT\",\n\"content-type\": \"application/x-amz-json-1.0\",\n\"content-length\": \"52\",\n\"connection\": \"keep-alive\",\n\"x-amzn-requestid\": \"5GLP3OHORDIUPQPUFP50394ARJVV4KQNSO5AEMVJF66Q9ASUAAJG\",\n\"x-amz-crc32\": \"1735756187\"\n},\n\"RetryAttempts\": 0\n}\n}\n</code></pre>"},{"location":"api-reference-guide/snapshot/create_snapshot/","title":"Create snapshot","text":""},{"location":"api-reference-guide/snapshot/create_snapshot/#create_snapshot","title":"create_snapshot","text":"<ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/snapshot/create_snapshot?distributionId=E20GR9AX7K798K&amp;snapShotName=ReleaseSnapshot&amp;snapShotNote=\"This is for Testing\"\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>distributionId: String</li> <li>snapShotName: String</li> <li>snapShotNote: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"statusCode\": 200,\n\"body\": \"succeed create new snapshot\"\n}\n</code></pre>"},{"location":"api-reference-guide/snapshot/delete_snapshot/","title":"Delete snapshot","text":""},{"location":"api-reference-guide/snapshot/delete_snapshot/#delete_snapshot","title":"delete_snapshot","text":"<ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/snapshot/delete_snapshot?distributionId=E20GR9AX7K798K&amp;snapShotName=dfdfd\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>distributionId: String</li> <li>snapShotName: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"statusCode\": 200,\n\"body\": \"succeed delete snapshot\"\n}\n</code></pre>"},{"location":"api-reference-guide/snapshot/diff_cloudfront_snapshot/","title":"Diff cloudfront snapshot","text":""},{"location":"api-reference-guide/snapshot/diff_cloudfront_snapshot/#diff_cloudfront_snapshot","title":"diff_cloudfront_snapshot","text":"<ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request <pre><code>/snapshot/diff_cloudfront_snapshot?distribution_id=E20GR9AX7K798K&amp;snapshot1=first Snapshot&amp;snapshot2=snapshot2\n</code></pre></p> </li> <li> <p>Request body parameters</p> <ul> <li>distribution_id: String</li> <li>snapshot1: String</li> <li>snapshot2: String</li> </ul> </li> <li> <p>Response <pre><code>\"diff --git a/tmp/E20GR9AX7K798K_3.json b/tmp/E20GR9AX7K798K_6.json\\nindex 4bded46..cb7824e 100644\\n--- a/tmp/E20GR9AX7K798K_3.json\\n+++ b/tmp/E20GR9AX7K798K_6.json\\n@@ -99,7 +99,7 @@\\n     \\\"CustomErrorResponses\\\": {\\n         \\\"Quantity\\\": 0\\n     },\\n-    \\\"Comment\\\": \\\"my test for cf\\\",\\n+    \\\"Comment\\\": \\\"my test for cf a new one\\\",\\n     \\\"Logging\\\": {\\n         \\\"Enabled\\\": false,\\n         \\\"IncludeCookies\\\": false,\\n\"\n</code></pre></p> </li> </ul>"},{"location":"api-reference-guide/snapshot/get_snapshot_link/","title":"Get snapshot link","text":""},{"location":"api-reference-guide/snapshot/get_snapshot_link/#get_snapshot_link","title":"get_snapshot_link","text":"<ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/snapshot/get_snapshot_link?distributionId=E20GR9AX7K798K&amp;snapShotName=snapshot2\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>distributionId: String</li> <li>snapShotName: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"config_link\": \"s3://cloudfrontconfigversions-cloudfrontconfigversions-rtzhljpc7u0i/E20GR9AX7K798K/2022/06/30/E20GR9AX7K798K_2022-06-30-12-10-14.json\"\n}\n</code></pre>"},{"location":"api-reference-guide/snapshot/list_snapshots/","title":"List snapshots","text":""},{"location":"api-reference-guide/snapshot/list_snapshots/#list_snapshots","title":"list_snapshots","text":"<ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/snapshot/list_snapshots?distributionId=E20GR9AX7K798K\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>distributionId: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>[\n{\n\"id\": \"snapshot2\",\n\"distribution_id\": \"E20GR9AX7K798K\",\n\"snapshot_name\": \"snapshot2\",\n\"note\": \"test note\",\n\"dateTime\": \"2022-06-30-12-10-16\",\n\"config_link\": \"s3://cloudfrontconfigversions-cloudfrontconfigversions-rtzhljpc7u0i/E20GR9AX7K798K/2022/06/30/E20GR9AX7K798K_2022-06-30-12-10-14.json\",\n\"s3_bucket\": \"cloudfrontconfigversions-cloudfrontconfigversions-rtzhljpc7u0i\",\n\"s3_key\": \"E20GR9AX7K798K/2022/06/30/E20GR9AX7K798K_2022-06-30-12-10-14.json\"\n},\n{\n\"id\": \"first Snapshot\",\n\"distribution_id\": \"E20GR9AX7K798K\",\n\"snapshot_name\": \"first Snapshot\",\n\"note\": \"This is my first snapshot\",\n\"dateTime\": \"2022-06-30-11-44-32\",\n\"config_link\": \"s3://cloudfrontconfigversions-cloudfrontconfigversions-rtzhljpc7u0i/E20GR9AX7K798K/2022/06/30/E20GR9AX7K798K_2022-06-30-11-44-07.json\",\n\"s3_bucket\": \"cloudfrontconfigversions-cloudfrontconfigversions-rtzhljpc7u0i\",\n\"s3_key\": \"E20GR9AX7K798K/2022/06/30/E20GR9AX7K798K_2022-06-30-11-44-07.json\"\n},\n{\n\"id\": \"_LATEST_\",\n\"distribution_id\": \"E20GR9AX7K798K\",\n\"snapshot_name\": \"_LATEST_\",\n\"note\": \"\",\n\"dateTime\": \"2022-06-30-11-42-39\",\n\"config_link\": \"s3://cloudfrontconfigversions-cloudfrontconfigversions-rtzhljpc7u0i/E20GR9AX7K798K/2022/07/31/E20GR9AX7K798K_2022-07-31-09-18-43.json\",\n\"s3_bucket\": \"cloudfrontconfigversions-cloudfrontconfigversions-rtzhljpc7u0i\",\n\"s3_key\": \"E20GR9AX7K798K/2022/07/31/E20GR9AX7K798K_2022-07-31-09-18-43.json\"\n}\n]\n</code></pre>"},{"location":"api-reference-guide/ssl-certificates/get-ssl-job/","title":"Get ssl job","text":""},{"location":"api-reference-guide/ssl-certificates/get-ssl-job/#get_ssl_job","title":"get_ssl_job","text":"<ul> <li> <p>HTTP request method: <code>GET</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/ssl_for_saas/get_ssl_job?jobId=f48db3b2-90e4-43b2-a46d-bd0e8530bc42\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>jobId: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>{\n\"distList\": [],\n\"jobId\": \"f48db3b2-90e4-43b2-a46d-bd0e8530bc42\",\n\"creationDate\": \"2022-08-01-06-44-44\",\n\"cloudfront_distribution_total_number\": \"1\",\n\"certValidationStageStatus\": \"SUCCESS\",\n\"cert_total_number\": \"1\",\n\"certCreateStageStatus\": \"SUCCESS\",\n\"jobType\": \"create\",\n\"job_input\": \"{\\n    \\\"acm_op\\\": \\\"create\\\",\\n    \\\"auto_creation\\\": \\\"true\\\",\\n    \\\"dist_aggregate\\\": \\\"false\\\",\\n    \\\"enable_cname_check\\\": \\\"false\\\",\\n    \\\"cnameList\\\": [\\n        {\\n            \\\"domainName\\\": \\\"web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn\\\",\\n            \\\"sanList\\\": [\\n                \\\"web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn\\\"\\n            ],\\n            \\\"originsItemsDomainName\\\": \\\"\\\",\\n            \\\"existing_cf_info\\\": {\\n                \\\"distribution_id\\\": \\\"E30J9PCOB6KHJV\\\",\\n                \\\"config_version_id\\\": \\\"1\\\"\\n            }\\n        }\\n    ],\\n    \\\"aws_request_id\\\": \\\"f48db3b2-90e4-43b2-a46d-bd0e8530bc42\\\"\\n}\",\n\"certList\": [],\n\"cloudfront_distribution_created_number\": \"1\",\n\"promptInfo\": \"\",\n\"cert_completed_number\": \"1\",\n\"distStageStatus\": \"SUCCESS\"\n}\n</code></pre>"},{"location":"api-reference-guide/ssl-certificates/import-create-ssl/","title":"Import create ssl","text":""},{"location":"api-reference-guide/ssl-certificates/import-create-ssl/#import-create-ssl","title":"import-create-ssl","text":"<p>Important</p> <p>You are not recommended to include more than 100 cname or pems records in one request. Too many requesting items in one request will cause backend ACM service and Cloudfront service throttle our request and cause the backend workflow failure.</p> <ul> <li> <p>HTTP request method: <code>POST</code></p> </li> <li> <p>Request</p> </li> <li> <p>Create one ACM certificate and auto create CloudFront distribution from existing distribution id and version id</p> </li> </ul> <pre><code>    {\n\"acm_op\": \"create\",   \"auto_creation\": \"true\", \"cnameList\": [  {\n\"domainName\": \"YOURDOMAINNAME.COM\", \"sanList\": [\n\"YOURDOMAINNAME.COM\",\n\"YOURDOMAINNAMEALIAS1.COM\"\n],\n\"existing_cf_info\": {\n\"distribution_id\": \"E195R1W5GIVPF5\", \"config_version_id\": \"1\"\n}\n}\n]\n}\n</code></pre> <ul> <li>Create one ACM certificate and auto create CloudFront distribution from existing distribution id</li> </ul> <pre><code>    {\n\"acm_op\": \"create\",   \"auto_creation\": \"true\", \"cnameList\": [  {\n\"domainName\": \"YOURDOMAINNAME.COM\", \"sanList\": [\n\"YOURDOMAINNAME.COM\",\n\"YOURDOMAINNAMEALIAS1.COM\"\n],\n\"existing_cf_info\": {\n\"distribution_id\": \"E195R1W5GIVPF5\", }\n}\n]\n}\n</code></pre> <ul> <li>Create two ACM certificates and auto create CloudFront distribution from existing distribution id </li> </ul> <pre><code>    {\n\"acm_op\": \"create\",   \"auto_creation\": \"true\", \"cnameList\": [  {\n\"domainName\": \"YOURDOMAINNAME1.COM\", \"sanList\": [\n\"YOURDOMAINNAME1.COM\",\n\"YOURDOMAINNAME1ALIAS1.COM\",\n\"YOURDOMAINNAME1ALIAS2.COM\" ],\n\"existing_cf_info\": {\n\"distribution_id\": \"E195R1W5GIVPF5\", }\n},\n{\n\"domainName\": \"YOURDOMAINNAME2.COM\", \"sanList\": [\n\"YOURDOMAINNAME2.COM\",\n\"YOURDOMAINNAME2ALIAS1.COM\",\n\"YOURDOMAINNAME2ALIAS1.COM\" ],\n\"existing_cf_info\": {\n\"distribution_id\": \"E195R1W5GIVPF5\", }\n}\n]\n}\n</code></pre> <ul> <li>Import one ACM certificate and auto create CloudFront distribution from existing distribution id</li> </ul> <pre><code>    {\n\"acm_op\": \"import\",\n\"auto_creation\": \"true\",\n\"cnameList\": [],\n\"pemList\": [\n{\n\"CertPem\": \"-----BEGIN CERTIFICATE-----\\nXXXXXXXXXXXX\\n-----END CERTIFICATE-----\",\n\"PrivateKeyPem\": \"-----BEGIN PRIVATE KEY-----\\nXXXXXXXXXXXX\\n-----END PRIVATE KEY-----\",\n\"ChainPem\": \"-----BEGIN CERTIFICATE-----\\nAAAAAAAAAAA\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nBBBBBBBBBBB\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nCCCCCCCCCCC\\n-----END CERTIFICATE-----\",\n\"existing_cf_info\": {\n\"distribution_id\": \"E1DACGTRXKKWCH\"\n}\n}\n]\n}\n</code></pre> <ul> <li>Import two ACM certificates and auto create CloudFront distribution from existing distribution id</li> </ul> <pre><code>    {\n\"acm_op\": \"import\",\n\"auto_creation\": \"true\",\n\"cnameList\": [],\n\"pemList\": [\n{\n\"CertPem\": \"-----BEGIN CERTIFICATE-----\\nXXXXXXXXXXXX\\n-----END CERTIFICATE-----\",\n\"PrivateKeyPem\": \"-----BEGIN PRIVATE KEY-----\\nXXXXXXXXXXXX\\n-----END PRIVATE KEY-----\",\n\"ChainPem\": \"-----BEGIN CERTIFICATE-----\\nAAAAAAAAAAA\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nBBBBBBBBBBB\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nCCCCCCCCCCC\\n-----END CERTIFICATE-----\",\n\"existing_cf_info\": {\n\"distribution_id\": \"E1DACGTRXKKWCH\"\n}\n},\n{\n\"CertPem\": \"-----BEGIN CERTIFICATE-----\\nXXXXXXXXXXXX\\n-----END CERTIFICATE-----\",\n\"PrivateKeyPem\": \"-----BEGIN PRIVATE KEY-----\\nXXXXXXXXXXXX\\n-----END PRIVATE KEY-----\",\n\"ChainPem\": \"-----BEGIN CERTIFICATE-----\\nAAAAAAAAAAA\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nBBBBBBBBBBB\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nCCCCCCCCCCC\\n-----END CERTIFICATE-----\",\n\"existing_cf_info\": {\n\"distribution_id\": \"E1DACGTRXKKWCH\"\n}\n}\n]\n}\n</code></pre> <ul> <li>Response</li> </ul> <pre><code>{\n\"statusCode\": 200,\n\"body\": \"21b370eb-6c6f-4f2a-8a84-e3cbfdc00318\"\n}\n</code></pre> <ul> <li>Response parameters</li> </ul> Name Type Description statusCode String 200 body String jobId of the backend processing, you can use returned jobId to get current status of backend workflow, please refer to get_ssl_job"},{"location":"api-reference-guide/ssl-certificates/list-certificates/","title":"List certificates","text":""},{"location":"api-reference-guide/ssl-certificates/list-certificates/#cert_list","title":"cert_list","text":"<ul> <li> <p>HTTP request method: <code>GET</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/ssl_for_saas/cert_list\n</code></pre> <ul> <li>Response</li> </ul> <pre><code>[\n{\n\"CertificateArn\": \"arn:aws:acm:us-east-1:596963228260:certificate/e73c12ee-1ea1-4607-8f38-e1fce284c48e\",\n\"DomainName\": \"test.omnimyo.store\",\n\"SubjectAlternativeNames\": \"test.omnimyo.store\",\n\"Issuer\": \"Amazon\",\n\"CreatedAt\": \"\\\"2022-07-13 05:24:46.152000+00:00\\\"\",\n\"IssuedAt\": \"\",\n\"Status\": \"ISSUED\",\n\"NotBefore\": \"\\\"2022-07-13 00:00:00+00:00\\\"\",\n\"NotAfter\": \"\\\"2023-08-12 23:59:59+00:00\\\"\",\n\"KeyAlgorithm\": \"RSA-2048\"\n},\n{\n\"CertificateArn\": \"arn:aws:acm:us-east-1:596963228260:certificate/7559c140-a6e0-4c25-8605-c6525561471e\",\n\"DomainName\": \"web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn\",\n\"SubjectAlternativeNames\": \"web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn\",\n\"Issuer\": \"Amazon\",\n\"CreatedAt\": \"\\\"2022-08-01 09:48:48.246000+00:00\\\"\",\n\"IssuedAt\": \"\",\n\"Status\": \"ISSUED\",\n\"NotBefore\": \"\\\"2022-08-01 00:00:00+00:00\\\"\",\n\"NotAfter\": \"\\\"2023-08-30 23:59:59+00:00\\\"\",\n\"KeyAlgorithm\": \"RSA-2048\"\n},\n{\n\"CertificateArn\": \"arn:aws:acm:us-east-1:596963228260:certificate/4389ceb0-271c-4a39-a59d-3ddf65705b68\",\n\"DomainName\": \"web2.ssl-for-saas.demo.solutions.aws.a2z.org.cn\",\n\"SubjectAlternativeNames\": \"web2.ssl-for-saas.demo.solutions.aws.a2z.org.cn\",\n\"Issuer\": \"Amazon\",\n\"CreatedAt\": \"\\\"2022-08-01 09:48:53.586000+00:00\\\"\",\n\"IssuedAt\": \"\",\n\"Status\": \"ISSUED\",\n\"NotBefore\": \"\\\"2022-08-01 00:00:00+00:00\\\"\",\n\"NotAfter\": \"\\\"2023-08-30 23:59:59+00:00\\\"\",\n\"KeyAlgorithm\": \"RSA-2048\"\n},\n{\n\"CertificateArn\": \"arn:aws:acm:us-east-1:596963228260:certificate/cf3323cb-feab-4688-bdfa-412de32beaf4\",\n\"DomainName\": \"web3.ssl-for-saas.demo.solutions.aws.a2z.org.cn\",\n\"SubjectAlternativeNames\": \"web3.ssl-for-saas.demo.solutions.aws.a2z.org.cn\",\n\"Issuer\": \"Amazon\",\n\"CreatedAt\": \"\\\"2022-08-01 09:48:58.895000+00:00\\\"\",\n\"IssuedAt\": \"\",\n\"Status\": \"ISSUED\",\n\"NotBefore\": \"\\\"2022-08-01 00:00:00+00:00\\\"\",\n\"NotAfter\": \"\\\"2023-08-30 23:59:59+00:00\\\"\",\n\"KeyAlgorithm\": \"RSA-2048\"\n}\n]\n</code></pre>"},{"location":"api-reference-guide/ssl-certificates/list-cloudfront-arn-with-jobId/","title":"list cloudfront arn with jobId","text":""},{"location":"api-reference-guide/ssl-certificates/list-cloudfront-arn-with-jobId/#list_cloudfront_arn_with_jobid","title":"list_cloudfront_arn_with_jobId","text":"<ul> <li> <p>HTTP request method: <code>GET</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/ssl_for_saas/list_cloudfront_arn_with_jobId?jobId=f48db3b2-90e4-43b2-a46d-bd0e8530bc42\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>jobId: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>[\n\"arn:aws:cloudfront::596963228260:distribution/E3I7SS3FT9440Q\",\n\"arn:aws:cloudfront::596963228260:distribution/EHZP3M6MW4FRU\",\n\"arn:aws:cloudfront::596963228260:distribution/E2OH67LDYUMZTG\"\n]\n</code></pre>"},{"location":"api-reference-guide/ssl-certificates/list-ssl_certification-with-jobId/","title":"list ssl certification with jobId","text":""},{"location":"api-reference-guide/ssl-certificates/list-ssl_certification-with-jobId/#list_ssl_certification_with_jobid","title":"list_ssl_certification_with_jobId","text":"<ul> <li> <p>HTTP request method: <code>GET</code></p> </li> <li> <p>Request</p> </li> </ul> <pre><code>/ssl_for_saas/list_ssl_certification_with_jobId?jobId=f98d3afb-4956-4ddc-b227-88c7a1f2384c\n</code></pre> <ul> <li> <p>Request body parameters</p> <ul> <li>jobId: String</li> </ul> </li> <li> <p>Response</p> </li> </ul> <pre><code>[\n\"arn:aws:acm:us-east-1:596963228260:certificate/7559c140-a6e0-4c25-8605-c6525561471e\",\n\"arn:aws:acm:us-east-1:596963228260:certificate/4389ceb0-271c-4a39-a59d-3ddf65705b68\",\n\"arn:aws:acm:us-east-1:596963228260:certificate/cf3323cb-feab-4688-bdfa-412de32beaf4\"\n]\n</code></pre>"},{"location":"api-reference-guide/ssl-certificates/list-ssl_jobs/","title":"List ssl jobs","text":""},{"location":"api-reference-guide/ssl-certificates/list-ssl_jobs/#list_ssl_jobs","title":"list_ssl_jobs","text":"<ul> <li> <p>HTTP request method: <code>GET</code></p> </li> <li> <p>Request</p> </li> </ul> <p><pre><code>/ssl_for_saas/list_ssl_jobs\n</code></pre> - Response</p> <pre><code>[\n{\n\"distList\": [],\n\"jobId\": \"21b370eb-6c6f-4f2a-8a84-e3cbfdc00318\",\n\"creationDate\": \"2022-08-01-01-55-06\",\n\"cloudfront_distribution_total_number\": \"0\",\n\"certValidationStageStatus\": \"NOTSTART\",\n\"cert_total_number\": \"1\",\n\"certCreateStageStatus\": \"FAILED\",\n\"jobType\": \"create\",\n\"job_input\": \"{\\n    \\\"acm_op\\\": \\\"create\\\",\\n    \\\"auto_creation\\\": \\\"false\\\",\\n    \\\"dist_aggregate\\\": \\\"false\\\",\\n    \\\"enable_cname_check\\\": \\\"false\\\",\\n    \\\"cnameList\\\": [\\n        {\\n            \\\"domainName\\\": \\\"ccc\\\",\\n            \\\"sanList\\\": [\\n                \\\"ccc\\\"\\n            ],\\n            \\\"originsItemsDomainName\\\": \\\"\\\",\\n            \\\"existing_cf_info\\\": {\\n                \\\"distribution_id\\\": \\\"\\\",\\n                \\\"config_version_id\\\": \\\"1\\\"\\n            }\\n        }\\n    ]\\n}\",\n\"certList\": [],\n\"cloudfront_distribution_created_number\": \"0\",\n\"promptInfo\": \"An error occurred (ValidationException) when calling the RequestCertificate operation: 2 validation errors detected: Value '[ccc]' at 'subjectAlternativeNames' failed to satisfy constraint: Member must satisfy constraint: [Member must have length less than or equal to 253, Member must have length greater than or equal to 1, Member must satisfy regular expression pattern: ^(\\\\*\\\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$]; Value 'ccc' at 'domainName' failed to satisfy constraint: Member must satisfy regular expression pattern: ^(\\\\*\\\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$\",\n\"cert_completed_number\": \"0\",\n\"distStageStatus\": \"NONEED\"\n},\n{\n\"distList\": [],\n\"jobId\": \"f48db3b2-90e4-43b2-a46d-bd0e8530bc42\",\n\"creationDate\": \"2022-08-01-06-44-44\",\n\"cloudfront_distribution_total_number\": \"1\",\n\"certValidationStageStatus\": \"SUCCESS\",\n\"cert_total_number\": \"1\",\n\"certCreateStageStatus\": \"SUCCESS\",\n\"jobType\": \"create\",\n\"job_input\": \"{\\n    \\\"acm_op\\\": \\\"create\\\",\\n    \\\"auto_creation\\\": \\\"true\\\",\\n    \\\"dist_aggregate\\\": \\\"false\\\",\\n    \\\"enable_cname_check\\\": \\\"false\\\",\\n    \\\"cnameList\\\": [\\n        {\\n            \\\"domainName\\\": \\\"web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn\\\",\\n            \\\"sanList\\\": [\\n                \\\"web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn\\\"\\n            ],\\n            \\\"originsItemsDomainName\\\": \\\"\\\",\\n            \\\"existing_cf_info\\\": {\\n                \\\"distribution_id\\\": \\\"E30J9PCOB6KHJV\\\",\\n                \\\"config_version_id\\\": \\\"1\\\"\\n            }\\n        }\\n    ],\\n    \\\"aws_request_id\\\": \\\"f48db3b2-90e4-43b2-a46d-bd0e8530bc42\\\"\\n}\",\n\"certList\": [],\n\"cloudfront_distribution_created_number\": \"1\",\n\"promptInfo\": \"\",\n\"cert_completed_number\": \"1\",\n\"distStageStatus\": \"SUCCESS\"\n}\n]\n</code></pre>"},{"location":"distribution-management/overview/","title":"Overview","text":""},{"location":"distribution-management/overview/#distribution-management","title":"Distribution Management","text":"<p>The solution helps you manage CloudFront distribution configuration and SSL certificates. For example, you can save a complex CloudFront distribution configuration to a Snapshot, and reuse the configuration (snapshot) to other CloudFront distributions in your AWS account.    </p> <ul> <li>Snapshot</li> <li>SSL certificates</li> </ul>"},{"location":"distribution-management/snapshot/apply-snapshot/","title":"Apply a snapshot to other CloudFront distributions","text":"<p>You can apply a snapshot to other CloudFront distributions.</p> <p>Important</p> <p>When you apply the snapshot, the target distribution configuration will be replaced.</p> <ol> <li>Log in to the web console.</li> <li>In the left sidebar, under Configuration, select Snapshot. </li> <li>Click a distribution (you can find it by CNAMEs) that you want to view its snapshots.</li> <li>From the snapshot list, select a snapshot.</li> <li>Choose Actions on the top right, and then choose Apply to other distributions.</li> <li>In the pop-up window, select one or more existing CloudFront distribution that you want to apply the configuration of this snapshot. </li> <li>Enter <code>Confirm</code> in the text box to confirm this action.</li> <li>Choose Apply. </li> </ol>"},{"location":"distribution-management/snapshot/compare-snapshot/","title":"Compare two snapshots","text":"<p>You can compare two snapshots to find their differences.</p> <ol> <li>Log in to the web console.</li> <li>In the left sidebar, under Configuration, select Snapshot. </li> <li>Click a distribution (you can find it by CNAMEs) that you want to compare its snapshots.</li> <li>From the snapshot list, select two snapshots that you want to compare.</li> <li>Choose Actions on the top right, and then choose Compare. You will be navigated to a different page, where you can view the difference between the two CloudFront distributions.</li> </ol>"},{"location":"distribution-management/snapshot/delete-snapshot/","title":"Delete a snapshot","text":"<p>If you do not need a snapshot any more, you can delete it.</p> <ol> <li>Log in to the web console.</li> <li>In the left sidebar, under Configuration, select Snapshot. </li> <li>Click a distribution (you can find it by CNAMEs) in which you want to delete a snapshot.</li> <li>From the snapshot list, select the snapshot you want to delete. </li> <li>Choose Actions on the top right, and then choose Delete Snapshot.</li> </ol>"},{"location":"distribution-management/snapshot/overview/","title":"Overview","text":""},{"location":"distribution-management/snapshot/overview/#snapshot","title":"Snapshot","text":"<p>A Snapshot is a CloudFront Distribution configuration. By saving a complex CloudFront Distribution configuration to a Snapshot, the configuration (snapshot)  can be reused to current or other CloudFront Distributions in your AWS account.    </p>"},{"location":"distribution-management/snapshot/overview/#why-need-to-save-snapshot","title":"Why need to save Snapshot","text":"<p>Configuring CloudFront is a complex, time-consuming task. Many misconfiguration or accidentally updated to an incorrect configuration can damage your business. Therefore, the Snapshot feature is provided to allow our client to save a reusable and comparable configuration as a Snapshot. Eventually, our client will benefit from the Snapshot feature to more effectively and efficiently manage the CloudFront.    </p>"},{"location":"distribution-management/snapshot/overview/#how-does-it-work","title":"How does it work?","text":"<p>Creating a Snapshot will export the current CloudFront Distribution configuration to a S3 bucket. The solution is using a DynamoDB table to maintain the mapping between the CloudFront configuration file and the snapshot name.</p>"},{"location":"distribution-management/snapshot/overview/#how-to-work-with-snapshots","title":"How to work with snapshots?","text":"<p>You can perform the following operations on snapshots on web console:</p> <ul> <li>Compare snapshot</li> <li>Apply snapshot</li> <li>Publish snapshot</li> <li>Delete snapshot</li> </ul> <p>You can also perform the following operations on snapshots via API:</p> <ul> <li>create_snapshot</li> <li>delete_snapshot</li> <li>list_snapshots</li> <li>diff_cloudfront_snapshot</li> <li>get_snapshot_link</li> <li>apply_snapshot</li> <li>config_snapshot_tag_update</li> </ul>"},{"location":"distribution-management/snapshot/overview/#what-does-snapshot-saved","title":"What does Snapshot saved?","text":"<p>Snapshot saves Cloudfront configuration as a configuration file, you can get the same cloudfront configuration through CLI: get-distribution-config. Our solution will save the configuration file in S3 and url in DynamoDB. You can use list_snapshots api to list all snapshots of one distribution. </p>"},{"location":"distribution-management/snapshot/overview/#how-long-will-snapshot-been-saved","title":"How long will Snapshot been saved?","text":"<p>The snapshot will be saved in S3 bucket and will not automatically been deleted. The snapshot can only be deleted in Web Console or through delete_snapshot api.</p>"},{"location":"distribution-management/snapshot/overview/#how-much-will-snapshot-cost","title":"How much will Snapshot cost?","text":"<p>Cloudfront configuration file is in JSON format and is around 3KB. Refer to Cost for more details.</p>"},{"location":"distribution-management/snapshot/publish-snapshot/","title":"Publish a snapshot","text":"<p>Before using a snapshot, you must create a snapshot.</p> <ol> <li>Log in to the web console.</li> <li>In the left sidebar, under Configuration, select Snapshot. </li> <li>Click a distribution (you can find it by CNAMEs) that you want to take a snapshot to enter its page. </li> <li>Choose Create Snapshot. </li> <li>In the window that pops up, enter a Snapshot Name (a unique key used to identify this snapshot), and also Description. </li> <li>Choose Create.</li> </ol>"},{"location":"distribution-management/ssl-certificates/add-record-for-cname/","title":"Adding CloudFront record for CNAME with your DNS Provider","text":"<p>You can add the CloudFront record for CNAME with your DNS Provider.</p>"},{"location":"distribution-management/ssl-certificates/add-record-for-cname/#add-cname-to-point-to-cloudfront-distribution-in-route53","title":"Add CName to point to CloudFront distribution in Route53","text":"<p>Once CloudFront distribution was created, the domain owner need to manually or use api to add the CloudFront distribution as a CNAME for the website domain, so that when someone access the website, the DNS provider will redirect the access to CloudFront distribution. Please refer to this AWS official documentation.</p>"},{"location":"distribution-management/ssl-certificates/add-record-for-cname/#add-cname-to-point-to-cloudfront-distribution-in-godaddy","title":"Add CName to point to CloudFront distribution in GoDaddy","text":"<ol> <li>Log in to GoDaddy. </li> <li>In the Domains* menu, select All Domains.</li> <li>Choose the domain that needs to update CNAME record.</li> <li>Add a new CNAME record, enter the Name with the CNAME and the Data with the corresponding CloudFront distribution. You should be able to retrieve both values in the SNS message sent by solution.</li> </ol>"},{"location":"distribution-management/ssl-certificates/clean-up-resources/","title":"Clean up resources","text":"<p>If a create job or an import job failed, you may want to clean up the SSL Certificates and CloudFront Distributions created by the job.</p>"},{"location":"distribution-management/ssl-certificates/clean-up-resources/#clean-up-certificates-in-aws-certificate-manager","title":"Clean up certificates in AWS Certificate Manager","text":"<ol> <li>On the Job Status page, choose View SSL certificates created in this job. You will be redirected to certificate list, where shows all the certificates created in this job.</li> <li>Click a specific certificate. You will be redirected to ACM web console.</li> <li>Delete the certificate.</li> <li>For all other certificates found in Step 1, delete them in ACM.</li> <li>Repeat Step 1 to check whether all certificates in this job were cleaned up.</li> </ol>"},{"location":"distribution-management/ssl-certificates/clean-up-resources/#clean-up-distributions-in-cloudfront","title":"Clean up distributions in CloudFront","text":"<ol> <li>On the Job Status page, choose View distributions created in this job. You will be redirected to distribution list, where shows all the distributions created in this job.</li> <li>Click a specific distribution.</li> <li>Delete the distribution.</li> <li>For all other distributions found in Step 1, delete them in CloudFront console.</li> <li>Repeat Step 1 to check whether all distributions in this job were cleaned up.</li> </ol>"},{"location":"distribution-management/ssl-certificates/create-new-certificates/","title":"Create new certificates","text":"<p>The solution will create one or multiple certificates in ACM and create the associated distributions in CloudFront. </p> <p></p>"},{"location":"distribution-management/ssl-certificates/create-new-certificates/#workflow","title":"Workflow","text":"<p>When you start a Create Certificates Job, the solution starts a workflow in AWS Step Functions that does the following:</p> <ol> <li> <p>Create certificates in ACM: The solution will automatically create all ACM based on input. After all SSL Certificates were created, the solution will automatically sent SNS message to the designated email address (depending on subscription). After this step, the domain owners are expected to complete DNS validation process. For more information, see DNS validation process with your DNS Provider.</p> </li> <li> <p>Check certificates status in ACM: The solution checks the progress of DNS validation status every 5 minutes. The DNS validation is a manual process, also known as Domain Control Validation. Domain owner needs to manually add a CNAME record for your domain name on the website of your DNS providers. ACM will check the DNS validation status every few minutes. Once done, ACM will issue certificates. </p> </li> <li> <p>Create new CloudFront distributions: Once all certificates were issued by ACM, the solution will automatically create CloudFront distributions. After all distributions were created, the solution will send an SNS message to the designated email address. After this step, the domain owners are expected to add new CloudFront distribution to map to CNAME. For more information, see Adding CloudFront record for CNAME with your DNS Provider.</p> </li> </ol> <p></p>"},{"location":"distribution-management/ssl-certificates/create-new-certificates/#schedule-a-job-for-creating-new-certificates","title":"Schedule a job for creating new certificates","text":"<ol> <li>Log in to the web console.</li> <li>In the left sidebar, under Configuration, select SSL Certification. </li> <li>Choose Request New Certificate.</li> <li>In the page that opens, click Get Started.</li> <li>Enter a group of domain name list for a certificate. Click Add domain names for another certificate if you want to create another certificate. </li> <li>Choose Automatically create distributions, and select a snapshot of a distribution that you want to copy the config from. </li> <li>Click Add new tag to add a Tag for the resource such as certificates, CloudFront Distributions that will be created.</li> <li>Click Start job.</li> <li>Verify the generated input parameters and if everything is fine then enter \"Confirm\" in input box and click \"Apply\" button.</li> </ol>"},{"location":"distribution-management/ssl-certificates/create-new-certificates/#view-create-certificate-job-status","title":"View create certificate job status","text":"<p>You can view job status on the web console or using API calls.</p> <p>Once the create job started, you will be redirected to a page where you can view the status of the job. For create certificate job, there are three steps in AWS Step functions workflow. After all steps are completed, the job will finish with success. If one of the steps failed, the job will fail. </p> <ul> <li>Step1 will be completed once all certificates were created in ACM. It usually takes less than a minute. </li> <li>Step2 will be completed once ACM had issued all expected certificates. ACM only issues the certificates if all DNS validation were done.(This step will be blocking until user do the DCV validation on all the domain names on related name servers, please refer to this link)</li> <li>Step3 will be completed once all expected distributions were created in CloudFront. </li> </ul> <p>After Step1, the domain owners are expected to complete DNS validation process. See more details in DNS validation process with your DNS Provider.</p> <p>After Step3, the domain owners are expected to add new CloudFront distribution to map to CNAME. See more details in Adding CloudFront record for CNAME with your DNS Provider.</p> <p>If the job failed, refer to Clean up resources to clean up the created ACM and CloudFront distributions if needed.</p>"},{"location":"distribution-management/ssl-certificates/dns-validation-process/","title":"DNS validation process with your DNS Provider","text":"<p>When you create certificates, you need to complete DNS validation process. This process requires you to add/update CNAME record in DNS provider, such as Route 53 and GoDaddy.</p>"},{"location":"distribution-management/ssl-certificates/dns-validation-process/#email","title":"Email","text":"<p>An email will be sent with information needed for DNS validation. The following is an example SNS notification in you email:</p> <pre><code>CNAME value need to add into DNS hostzone to finish DCV: [{'Name': '_1317a5f539939083b712d51b6b1676e5.web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn.', 'Type': 'CNAME', 'Value': '_de026e5dc988d65312fe83616ef24249.hnyhpvdqhv.acm-validations.aws.'}]\n</code></pre> <p>If you do not know where the email was sent to, you can check it in CloudFormation stack that was deployed when you launch the solution. </p> <p>If you want to update the email, you need to update the email parameter in the CloudFormation stack. </p>"},{"location":"distribution-management/ssl-certificates/dns-validation-process/#adding-cnames-record-for-dcv-validation-in-route53","title":"Adding CNAMEs record for DCV validation in Route53","text":""},{"location":"distribution-management/ssl-certificates/dns-validation-process/#adding-through-aws-route53-console","title":"Adding Through AWS Route53 Console","text":"<ol> <li>Sign in to the AWS Management Console and access the Route 53 console.</li> <li>In the navigation pane, choose Hosted zones.</li> <li> <p>If you already have a hosted zone for your domain, skip to step 5. If not, create a hosted zone first.</p> <ul> <li>To route internet traffic to your resources, such as Amazon S3 buckets or Amazon EC2 instances, see Creating a public hosted zone.</li> <li>To route traffic in your VPC, see Creating a private hosted zone.</li> </ul> </li> <li> <p>On the Hosted zones page, choose the name of the hosted zone that you want to create records in.</p> </li> <li>Choose Create record.</li> <li>Enter the name and value in Create record form with type CNAME.</li> </ol>"},{"location":"distribution-management/ssl-certificates/dns-validation-process/#adding-through-provided-script","title":"Adding Through Provided Script","text":"<ol> <li> <p>Prepare python environment based on your os: install python.</p> </li> <li> <p>Find out the hosted zone ID from the aws console under Route53/YOUR_DOMAIN_NAME/Hosted zone details tab.</p> </li> <li> <p>Copy the script below and save to file <code>route53Cert.py</code>. Open the file and update the data based on your received email, for example:</p> route53Cert.py<pre><code>import boto3\nroute53 = boto3.client('route53')\ndef add_cname_record(cnameName, cnameValue, hostedZoneId):\nresponse = route53.change_resource_record_sets(\nChangeBatch={\n'Changes': [\n{\n'Action': 'CREATE',\n'ResourceRecordSet': {\n'Name': cnameName,\n'ResourceRecords': [\n{\n'Value': cnameValue,\n},\n],\n'SetIdentifier': 'SaaS For SSL',\n'TTL': 300,\n'Type': 'CNAME',\n'Weight': 100,\n},\n}\n],\n'Comment': 'add cname record for certificate',\n},\nHostedZoneId=hostedZoneId,\n)\nif __name__ == '__main__':\n# paste your data as the cnameList value\ncnameList = [{'Name': '_1317a5f539939083b712d51b6b1676e5.web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn.', 'Type': 'CNAME', 'Value': '_de026e5dc988d65312fe83616ef24249.hnyhpvdqhv.acm-validations.aws.'}]\nfor i, val in enumerate(cnameList):\n# change your host zone id\nadd_cname_record(val['Name'], val['Value'], '&lt;Your Hosted Zone ID&gt;')              \n</code></pre> </li> <li> <p>Install python dependencies, you can follow this tutorial to setup your environment.</p> </li> <li> <p>Run your script by <code>python route53Cert.py</code>. it will be success add record to your domain if there is no error output.</p> </li> </ol>"},{"location":"distribution-management/ssl-certificates/dns-validation-process/#adding-cnames-record-for-dcv-validation-in-godaddy","title":"Adding CNAMEs record for DCV validation in GoDaddy","text":""},{"location":"distribution-management/ssl-certificates/dns-validation-process/#adding-through-godaddy-console","title":"Adding Through GoDaddy Console","text":"<ol> <li>Log in to GoDaddy. </li> <li>In the Domains menu, select All Domains*.</li> <li>Choose the domain that needs to update CNAME record.</li> <li>Add a new CNAME record, enter the Name with the CNAME and the Data with the corresponding CloudFront distribution. You should be able to retrieve both values in the SNS message sent by solution.</li> </ol>"},{"location":"distribution-management/ssl-certificates/dns-validation-process/#adding-through-provided-script_1","title":"Adding Through Provided Script","text":"<ol> <li>Prepare python environment based on your os: install python.</li> <li>Find out goDaddy api Key and Secret from the goDaddy Console.</li> <li> <p>Copy the script below and save to file <code>goDaddyCert.py</code>. Open the file and update the data based on your received email, for example:</p> goDaddyCert.py<pre><code>   #!/usr/bin/env python\nfrom godaddypy import Client, Account\n# remember to set your api key and secret\nuserAccount = Account(api_key='your_api_key', api_secret='your_api_secret')\nuserClient = Client(userAccount)\n# E.g.: to update your_record.yourdomain.com set domain and record to:\ndomain = 'your_domain'\ndef add_cname_record(cnameName, cnameValue, domain):\nupdateResult = userClient.add_record(domain=domain, record={'data': cnameValue, 'name':cnameName,'ttl':3600, 'type':'CNAME'})\nprint(str(updateResult))\nif __name__ == '__main__':\n# paste your data as the cnameList value\ncnameList = [{'Name': '_1317a5f539939083b712d51b6b1676e5.web1.ssl-for-saas.demo.solutions.aws.a2z.org.cn.', 'Type': 'CNAME', 'Value': '_de026e5dc988d65312fe83616ef24249.hnyhpvdqhv.acm-validations.aws.'}]\nfor i, val in enumerate(cnameList):\nadd_cname_record(val['Name'], val['Value'], domain)\n</code></pre> </li> <li> <p>Install python dependencies by following this tutorial.</p> </li> <li>Run the script with 'python goDaddyCert.py'. If not error message displayed, then your script has been successfully executed.</li> </ol>"},{"location":"distribution-management/ssl-certificates/import-existing-certificates/","title":"Import existing certificates","text":"<p>The solution will automatically import one or multiple your existing issued certificates in ACM and create associated distributions in CloudFront. </p> <p></p>"},{"location":"distribution-management/ssl-certificates/import-existing-certificates/#workflow","title":"Workflow","text":"<p>When you starts an Import Certificate Job, the solution starts a workflow in AWS Step Functions that does the following:</p> <ol> <li>Import certificates in ACM: The solution will automatically import certificate records in ACM.</li> <li>Create new CloudFront distributions: The solution will automatically create CloudFront distributions. After all distributions were created, the solution will send a SNS message to the designated email address. </li> </ol> <p></p>"},{"location":"distribution-management/ssl-certificates/import-existing-certificates/#schedule-a-job-for-importing-existing-certificates","title":"Schedule a job for importing existing certificates","text":"<p>Important</p> <p>Currently, the solution only supports importing one certificate in a job on the Web console. Alternatively, you can use API to import multiple certificates, see API reference guide for details.</p> <ol> <li>Log in to the web console.</li> <li>In the left sidebar, under Configuration, select SSL Certification. </li> <li>Choose Import Existing Certificates.</li> <li>Choose Import One Certificate.</li> <li>Enter Certificate name, Certificate body, Certificate Private Body, and Certificate chain.</li> <li>Click Add new tag to add a Tag for the resource (certificate, CloudFront Distributions) that will be created.</li> <li>Click Start job.</li> <li>Verify the generated input parameters and if everything is fine then enter \"Confirm\" in input box and click \"Apply\" button.</li> </ol>"},{"location":"distribution-management/ssl-certificates/import-existing-certificates/#view-import-certificate-job-status","title":"View import certificate job status","text":"<p>Once the import job started, you will be redirected to a page where you can view the status of the job. For import certificate job, there are two steps in AWS Step Function workflow. After all steps are completed, the job will finish with success. If one of the steps failed, the job will fail. </p> <ul> <li>Step1 will be completed once all certificates were created in ACM. It usually takes less than a minute.</li> <li>Step2 will be completed once all expected distributions were created in CloudFront.</li> </ul> <p>After Step2, the domain owners are expected to add new CloudFront distribution to map to CNAME. For more information, see Adding CloudFront record for CNAME with your DNS Provider.</p> <p>If the job failed, refer to Clean up resources to clean up the created ACM and CloudFront distributions if needed.</p>"},{"location":"distribution-management/ssl-certificates/list-certificates/","title":"List SSL certificates","text":"<p>On the web console, you can search for the SSL certificates by CNAMEs. In the backend of the solution, it calls the ACM API to list all current certificates you have in this AWS account. </p> <p>Important</p> <p>One CNAME could be mapped to multiple SSL Certificates. However, when creating CloudFront distributions, you cannot have two distributions map to one CNAME (the alternative domain name). </p> <p>To list SSL certificates on the web console, do the following:</p> <ol> <li>Log in to the web console.</li> <li>In the left sidebar, under Configuration, select SSL Certification. </li> <li>View the listed SSL certificates. </li> </ol> <p>You can also get the SSL Certificate List via APIs. For more information, see API Reference Guide.</p>"},{"location":"distribution-management/ssl-certificates/overview/","title":"Overview","text":""},{"location":"distribution-management/ssl-certificates/overview/#ssl-certificates","title":"SSL Certificates","text":"<p>You can use this solution to automatically create or import SSL Certificates and associate them to new CloudFront distributions. The solution provides two kinds of jobs: Create Certificates Job and Import Certificate Job. You can use them on web console or via API calls.</p> <p>This chapter covers the following topics:</p> <ul> <li>Create new certificates</li> <li>Import existing certificates</li> <li>List SSL certificates</li> <li>DNS validation process with your DNS Provider</li> <li>Adding CloudFront record for CNAME with your DNS Provider</li> <li>Clean up resources</li> </ul>"},{"location":"distribution-management/ssl-certificates/overview/#prerequisites","title":"Prerequisites","text":"<p>Before you create or import certificates, make sure to meet the Prerequisites listed by ACM. </p>"},{"location":"extension-repository/more-extension-in-sar/","title":"More Extensions in Serverless Application Repository (SAR)","text":"<p>As for Lambda@Edge functions, you can also find and configure them by searching aws-cloudfront-extensions in the Amazon SAR. Please refer to deployment for more details.</p>"},{"location":"extension-repository/overview/","title":"Overview","text":"<p>The solution provides a set of ready-to-use extensions (Lambda@Edge functions, CloudFront functions, CloudFormation templates) that could be useful when you use CloudFront. You can deploy them from the solution web console. After deployment, you can directly use it without programming or customize it when needed.</p> <p>You can use the following extensions:</p> <ul> <li>True Client IP</li> <li>Pre-warming</li> <li>Redirect by Country</li> <li>Resize Image</li> <li>More extensions in Serverless Application Repository (SAR)</li> </ul>"},{"location":"extension-repository/pre-warming/","title":"Pre-warming","text":""},{"location":"extension-repository/pre-warming/#what-is-pre-warming","title":"What is Pre-warming?","text":"<p>Pre-warming is also known as Pre-caching or Pre-fetching. It speeds up content delivery by warming the CloudFront cache. This is very useful when delivering large files. Pre-warming helps offload origin\u2019s traffic, as the same requests will hit the CloudFront cache, origin server receives less requests and consequently it's less likely that the origin server will fall over or become slow. </p>"},{"location":"extension-repository/pre-warming/#how-does-it-work","title":"How does it work?","text":"<p>The solution deploys a CloudFormation template, that will install the below architecture in your AWS account. All the cloud resources will be automatically created. After deployed, you will get two REST APIs, one for triggering pre-warm action, the other one for getting pre-warm status.</p> <p></p> <p>The CloudFormation template provides the following components and workflows:</p> <ol> <li>Scheduler Lambda function inserts initial pre-warm status into the DynamoDB table and invokes cache invalidator.</li> <li>Cache invalidator Lambda function invalidates CloudFront caches for all the URLs and sends messages with requestId, PoP and URLs, and so on into SQS.</li> <li>CloudWatch alarm monitors the messages in the queue and notifies the auto scaling group to scale out when messages are sent into the queue.</li> <li>Auto scaling group contains EC2 spot instances. Each instance sends requests to the edge locations and updates the prewarm status into DynamoDB table after consuming the messages from the SQS queue.</li> <li>StatusFetcher function gets the prewarm status from the DynamoDB table.</li> </ol>"},{"location":"extension-repository/pre-warming/#deployment-on-the-web-console-recommended","title":"Deployment on the web console (Recommended)","text":"<p>The steps to deploy the extensions from the web console are similar. For more information, refer to the section True Client IP.</p>"},{"location":"extension-repository/pre-warming/#deployment-via-cloudformation","title":"Deployment via CloudFormation","text":"<p>Time to deploy: Approximately 10 minutes</p>"},{"location":"extension-repository/pre-warming/#deployment-overview","title":"Deployment overview","text":"<p>Use the following steps to deploy this solution on AWS.</p> <ul> <li>Launch the CloudFormation template into your AWS account.</li> <li>Review the template parameters, and adjust them if necessary.</li> </ul>"},{"location":"extension-repository/pre-warming/#deployment-steps","title":"Deployment steps","text":"<ol> <li> <p>Sign in to the AWS Management Console and select the button to launch the CloudFormation template. You can also download the template as a starting point for your own implementation.</p> <p></p> </li> <li> <p>The template launches in the US East (N. Virginia) Region by default. To launch the solution in a different AWS Region, use the Region selector in the console navigation bar.</p> </li> <li> <p>Under Parameters, review the parameters for the template, and modify them as necessary.</p> Parameter Default value Description ShowSuccessUrls false Show success url list in Prewarm status API (true or false). InstanceType c6a.large EC2 spot instance type to send pre-warm requests. ThreadNumber 6 Thread number to run in parallel in EC2. </li> <li> <p>Choose Next.</p> </li> <li>On the Configure stack options page, you can specify tags (key-value pairs) for resources in your stack and set additional options, and then choose Next.</li> <li>On the Review page, review and confirm the settings. Check the boxes acknowledging that the template will create AWS Identity and Access Management (IAM) resources and any additional capabilities required.</li> <li>Choose Create to deploy the stack. </li> </ol> <p>You can view the status of the stack in the CloudFormation Console in the Status column. You should receive a CREATE_COMPLETE status in approximately 10 minutes.</p> <p>To see details for the stack resources, choose the Outputs tab. </p>"},{"location":"extension-repository/pre-warming/#how-to-use-pre-warming","title":"How to use Pre-warming","text":"<p>Please set Viewer protocol policy as HTTP and HTTPS in your CloudFront distribution's cache behavior before pre-warming.</p>"},{"location":"extension-repository/pre-warming/#pre-warm-by-postman","title":"Pre-warm by Postman","text":"<ol> <li> <p>After deployment, open the Outputs tab of CloudFormation stack, and you can see the following information:     </p> <ul> <li>PrewarmAPIkey: API key arn\u3002You can find the API key in API Gateway console. This key is used for authentication when requesting to pre-warm API, as the value of x-api-key.</li> <li>PrewarmApiEndpoint: Pre-warm API's URL is followd by the prewarm keyword. Eg. if PrewarmApiEndpoint is https://123456789.execute-api.us-east-1.amazonaws.com/prod/, then pre-warm API will be https://123456789.execute-api.us-east-1.amazonaws.com/prod/prewarm</li> <li>PrewarmStatusApiEndpoint: Pre-warm status API's URL is followed by the status keyword. Eg. If PrewarmStatusApiEndpoint is https://test.execute-api.us-east-1.amazonaws.com/prod/, then pre-warm status API will be https://urs06q9rid.execute-api.us-east-1.amazonaws.com/prod/status</li> <li>Open a tool that can send HTTP requests, such as Postman.</li> <li>Send pre-warm request (refer to API references for more details), and add a key value pair in the header: key is x-api-key, value is your API key.</li> </ul> <p> </p> </li> <li> <p>The pre-warming API will return a requestID. Now you have successfully triggered the pre-warming, you can obtain the pre-warm status by PrewarmStatus API.</p> </li> <li>Send pre-warm status request, add the requestId in the URL querystring, and add x-api-key in the header. The pre-warm status can be seen in the response.(Please check if there is a value named \"Accept-Encoding\" in default headers\uff0cand its value is \"gzip, deflate, br\"\uff0cif there isn't \uff0cplease add it.)     </li> </ol>"},{"location":"extension-repository/pre-warming/#pre-warm-by-curl","title":"Pre-warm by Curl","text":""},{"location":"extension-repository/pre-warming/#pre-warm","title":"Pre-warm","text":"<p>Script content:</p> <p>prewarmlist.json</p> <pre><code>  {\n        \"url_list\": [\n              \"https://www.example.com/index.html\",\n              \"https://www.example.com/images/demo.png\"\n        ],\n        \"target_type\":\"pop\",\n        \"cf_domain\": \"d1234567890r.cloudfront.net\",\n        \"region\": [\"ATL56-C1\", \"DFW55-C3\"]\n  }\n</code></pre> <p>prewarm.sh</p> <pre><code>  prewarmuri=\"https://123456789.execute-api.us-east-1.amazonaws.com/prod/prewarm\"\n  curl --header 'x-api-key: KEY12345678900Tg9P' -XPOST -d @prewarmlist.json $prewarmuri\n</code></pre> <p>Execute the script:</p> <pre><code>  sh prewarm.sh\n</code></pre> <p>Example of the script output:</p> <pre><code>  {\"requestID\": \"e1efca9a-8d92-4058-a1e9-002fd423f6e5\"}\n</code></pre>"},{"location":"extension-repository/pre-warming/#prewarm-status","title":"Prewarm status","text":"<p>Script content:</p> <p>prewarmstatus.sh</p> <pre><code>  #!/bin/bash\n  statusurl=\"https://3e23456789h.execute-api.us-east-1.amazonaws.com/prod/status?requestID=e1efca9a-8d92-4058-a1e9-002fd423f6e5\u201c\n  curl  --header 'x-api-key: KEY123456789Tg9P' $statusurl\n</code></pre> <p>Execute the script:</p> <pre><code>  sh prewarmstatus.sh\n</code></pre> <p>Example of the script output:</p> <pre><code>  {\n        \"status\": \"COMPLETED\",\n        \"total\": 2,\n        \"completed\": 2,\n        \"inProgress\": 0,\n        \"failedUrl\": [],\n        \"inProgressUrl\": []\n  }\n</code></pre>"},{"location":"extension-repository/pre-warming/#troubleshooting","title":"Troubleshooting","text":"<p>The pre-warm solution will automatically start the EC2 Spot instance and execute the script on EC2 to pre-warm resources. The location of the pre-warm script is /etc/agent/agent.py, these EC2 instances will be deleted automatically after the pre-warming is completed. You can login to the EC2 instance and view the specific execution log in /var/log/user-data.log for debugging.</p>"},{"location":"extension-repository/redirect-by-country/","title":"Redirect by Country","text":""},{"location":"extension-repository/redirect-by-country/#what-is-redirect-by-country","title":"What is Redirect by Country?","text":"<p>If you need to redirect your website user to a country-specific site based on the country of the user, you can deploy this extension. For example, if the user is located in Germany, a CloudFront function modifies the URL in request and redirects the user to the /de/index.html page, which is the Germany-specific version of the website. This function is building the whole URL (https://host/de/index.html) to redirect.</p>"},{"location":"extension-repository/redirect-by-country/#how-does-it-work","title":"How does it work?","text":"<p>This extension makes use of the Cloudfront-Viewer-Country geo-location header which performs a lookup on the request to determine the user's country and includes that value in the Cloudfront-Viewer-Country request header. </p> <p>You can use any of the geo-location or device detection headers that are available from CloudFront. For the geo-location or device detection headers to appear in the request object within a function, you must allow these headers (or allow all viewer headers) in a CloudFront origin request policy or cache policy.</p> <p>The solution deploys a CloudFormation template that does the following:</p> <ul> <li>Deploy a CloudFront Functions named \u201credirect-by-country\u201d on your selected CloudFront distribution\u2019s behaviors. </li> <li>Create a CloudFront origin request policy named \"redirect-by-country\" that adds \"cloudfront-viewer-country\" header to the allowed header list.</li> <li>Add \"redirect-by-country\" origin request policy automatically to the CloudFront distribution's behaviors. </li> </ul> <p>Important</p> <p>If the CloudFront distribution already has an AWS origin request policy, then you need manually add it in the origin request policy. </p>"},{"location":"extension-repository/redirect-by-country/#cloudfront-stage","title":"CloudFront Stage","text":"<p>Viewer request</p>"},{"location":"extension-repository/redirect-by-country/#deployment-on-the-web-console-recommended","title":"Deployment on the web console (Recommended)","text":"<p>The steps to deploy the extensions from the web console are similar. For more information, refer to the section True Client IP.</p>"},{"location":"extension-repository/resize-image/","title":"Resize Image","text":""},{"location":"extension-repository/resize-image/#what-is-resize-image","title":"What is Resize Image?","text":"<p>This solution resizes your images on the fly. The user is able to resize images by Lambda function which is deployed in CloudFront distributions. It will be really useful when there are lots of pictures need to be resized, the user doesn't need to resize them manually.</p>"},{"location":"extension-repository/resize-image/#how-does-it-work","title":"How does it work?","text":"<ol> <li> <p>User specifies the dimension (width and height) in the url, e.g. https://www.example.com/images/200x300/demo.png</p> </li> <li> <p>If the image in specific dimension is existed in S3 bucket, then do nothing and return it.</p> </li> <li> <p>If the object is not existed in S3 bucket, a 404 Not Found response will be returned to CloudFront edge location, Lambda@Edge will fetch the source image (e.g. images/demo.png) from S3 bucket into buffer, resize it and store the resized image into relative folder(e.g. images/200x300) in S3 bucket   (Note: If you see a 403 instead of 404 error, you will need to add s3:ListBucket into the bucket policy)     Here's an example:     <pre><code>    {\n        \"Sid\": \"1\",\n        \"Effect\": \"Allow\",\n        \"Principal\": {\n            \"AWS\": \"arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity Example\"\n        },\n        \"Action\": \"s3:ListBucket\",\n        \"Resource\": \"arn:aws:s3:::example-bucket\"\n    }\n</code></pre></p> </li> <li> <p>After the image is resized and stored, update the status code to 200 and return the resized image.</p> </li> <li> <p>The image is cached in CloudFront edge location, so next time when you invoke the same url with same dimension, it will return the image from CloudFront cache, and will not access origin.</p> </li> </ol>"},{"location":"extension-repository/resize-image/#usage","title":"Usage","text":"<p>To user this CloudFront extension</p> <ol> <li> <p>Login your AWS account and go to S3 console.</p> </li> <li> <p>Create an S3 bucket, and a folder with any name(e.g. images), put your image(e.g. demo.png) in the folder.</p> <p></p> </li> <li> <p>Go to CloudFront console, Click Create distribution button.</p> </li> <li> <p>In Create distribution page, for Origin domain, choose the S3 bucket created in step 2; For S3 bucket access, choose 'Yes use OAI' and click 'Create new OAI' button to create a new OAI. for bucket policy, choose 'Yes, update the bucket policy'. Keep other options with default value and click Create button.</p> </li> <li> <p>Keep waiting until CloudFront distribution is created.</p> </li> <li> <p>Go to S3 console. Choose the S3 bucket created in step 2.</p> </li> <li> <p>In permission tab, update Action and Resource values in the bucket policy. (Update Action to s3:ListBucket, update Resource to S3 bucket ARN created in step 2).</p> <pre><code>{\n    \"Version\": \"2008-10-17\",\n    \"Id\": \"PolicyForCloudFrontPrivateContent\",\n    \"Statement\": [\n        {\n            \"Sid\": \"1\",\n            \"Effect\": \"Allow\",\n            \"Principal\": {\n                \"AWS\": \"arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity E2NHBYQWR0YVVH\"\n            },\n            \"Action\": \"s3:ListBucket\",\n            \"Resource\": \"arn:aws:s3:::input-your-bucket-name\"\n        }\n    ]\n}\n</code></pre> </li> <li> <p>Deploy CloudFront Extensions Console. In extensions repository, find image-resize.</p> </li> <li> <p>Click Deploy button.</p> <p>Here're the details of each parameter:</p> Parameter Description FitType The way to fit the image. Valid values are cover(Preserving aspect ratio, ensure the image covers both provided dimensions by cropping to fit); contain(Preserving aspect ratio, contain within both provided dimensions using letterboxing where necessary); fill(Ignore the aspect ratio of the input and stretch to both provided dimensions); inside(Preserving aspect ratio, resize the image to be as large as possible while ensuring its dimensions are less than or equal to both those specified); outside (Preserving aspect ratio, resize the image to be as small as possible while ensuring its dimensions are greater than or equal to both those specified) S3BucketName S3 bucket name which contains the images, for example, resize-image-demo </li> <li> <p>Keep waiting until the function is deployed, it will show the deployed resources.   </p> </li> <li>Click ResizeLambdaEdgeFunction in the resources table.</li> <li> <p>Click Deploy to Lambda@Edge button.   </p> </li> <li> <p>Choose the CloudFront distribution, for CloudFront event, choose Origin response and click Deploy button.   </p> </li> <li> <p>Keep waiting until the Lambda@Edge deployment is completed.</p> </li> <li> <p>To use resize image feature, type in url(e.g. https://CloudFrontUrl/images/200x300/demo.png) in your browser, it will automatically create an images/200x300 folder in S3 bucket and generate a 200x300 demo.png in it.</p> <p>In this example, the source image is located in images/demo.png, the automatically generated images are stored in relative folders which are named by dimensions.</p> <p></p> </li> </ol>"},{"location":"extension-repository/resize-image/#cloudfront-stage","title":"CloudFront Stage","text":"<p>Origin response</p>"},{"location":"extension-repository/resize-image/#deployment-on-the-web-console-recommended","title":"Deployment on the web console (Recommended)","text":"<p>The steps to deploy the extensions from the web console are similar. For more information, refer to the section True Client IP.</p>"},{"location":"extension-repository/true-client-ip/","title":"True Client IP","text":"<p>You can get the client IP by reading the True-Client-IP header in your origin server.</p>"},{"location":"extension-repository/true-client-ip/#what-is-true-client-ip-extension","title":"What is True Client IP Extension?","text":"<p>If your origin server needs to get the client\u2019s IP address, you can use this extension. The extension automatically adds an HTTP header named \u201cTrue-Client-IP\u201d in your request. With this header, the request can contain the IP address of the client that sent the request. Without this header, the request by default contains the IP address of the CloudFront server that sent the request to your origin.</p>"},{"location":"extension-repository/true-client-ip/#how-does-it-work","title":"How does it work?","text":"<p>The solution deploys a CloudFormation template that does the following:</p> <ul> <li>Install a CloudFront Function named \u201ctrue-client-ip\u201d on your selected CloudFront distribution\u2019s behaviors. </li> <li>Create a CloudFront origin request policy named \u201ctrue-client-ip\u201d that add this header to the allowed header list.</li> <li>Attach the policy to the above distribution. </li> </ul> <p>Important</p> <p>If the CloudFront distribution already has an AWS built-in policy attached, you need to manually add the created policy to the attachment.</p> <p>Note</p> <p>You don't have to use the header name True-Client-IP. You can change the name to any value that your origin requires (e.g. X-Real-IP).</p> <p>CloudFront also sends an X-Forwarded-For header to your origin, which contains the client's IP address along with any HTTP proxies or load balancers that the request passed through.</p>"},{"location":"extension-repository/true-client-ip/#cloudfront-stage","title":"CloudFront Stage","text":"<p>Viewer request</p>"},{"location":"extension-repository/true-client-ip/#deployment-on-the-web-console-recommended","title":"Deployment on the web console (Recommended)","text":"<ol> <li>Log in to the web console.</li> <li>In the left sidebar, select Extensions repository.</li> <li>Select true-client-ip from the Extensions list, and click Deploy in the upper right corner.</li> <li>Choose a Distribution where you want to deploy this CloudFront extension. </li> <li>Choose a Behavior, and choose Next.</li> <li>Choose a CloudFront stage, and choose Next.</li> <li>Review the parameters and choose Deploy.</li> </ol> <p>Follow the guidance on the web console to check deployment status on CloudFormation console.</p>"},{"location":"monitoring/metrics-dashboard/","title":"Metrics dashboard","text":"<p>Metrics dashboard is customizable time range for Non-real time or Real time monitoring that you can use to track CloudFront traffic graphical metrics in a single dashboard. The dashboard uses CloudFront standard log or realtime log to get the metrics. The solution provides a metric API if you only need to get the metric data via RESTful API and don't need the dashboard.</p> <p>With the Metrics dashboard, you can do the following:</p> <ul> <li> <p>View graphic metrics</p> <p>The CloudFront monitoring dashboard displays multiple metrics in each graphical chart for your reference. Each chart is mapped to one metric in CloudFront Monitoring API.</p> <p>Note</p> <p>The graphic metrics type in the dashboard are the same as the CloudFront Monitoring API acquisition type when deploying the solution.</p> <p>The metrics description is as follows:</p> CloudFront Monitoring API Type Description Window Time Real time traffic metrics Realtime log for CloudFront distribution with 5-min delay 5 minutes Non-real time traffic metrics Non-Realtime log for CloudFront distribution with 1-hour delay 5 minutes <p>Metrics definition:</p> Metric Description Sample SQL to get metric in Athena Requests The number of requests from the client to CloudFront SELECT count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672813380.0 AND timestamp &gt; 1672813320.0 group by \"cs-host\", \"c-country\"; Origin requests The number of requests back to the origin SELECT count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672813620.0 AND timestamp &gt; 1672813560.0 AND (\"x-edge-detailed-result-type\" = 'Miss' OR (\"x-edge-detailed-result-type\" like '%Origin%' AND \"x-edge-detailed-result-type\" &lt;&gt; 'OriginShieldHit')) group by \"cs-host\", \"c-country\"; Requests latency The latency of the requests from the client to CloudFront SELECT count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672813380.0 AND timestamp &gt; 1672813320.0 group by \"cs-host\", \"c-country\"; Origin requests latency The latency of the requests back to the origin SELECT count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672813620.0 AND timestamp &gt; 1672813560.0 AND (\"x-edge-detailed-result-type\" = 'Miss' OR (\"x-edge-detailed-result-type\" like '%Origin%' AND \"x-edge-detailed-result-type\" &lt;&gt; 'OriginShieldHit')) group by \"cs-host\", \"c-country\"; Requests 3xx/4xx/5xx error rate The percentage of 3xx/4xx/5xx status code from the client to CloudFront SELECT \"sc-status\", count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672815240.0 AND timestamp &gt; 1672815180.0 GROUP BY \"sc-status\", \"cs-host\", \"c-country\"; Origin requests 3xx/4xx/5xx error rate The percentage of 3xx/4xx/5xx status code back to the origin SELECT \"sc-status\", count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672815360.0 AND timestamp &gt; 1672815300.0 AND (\"x-edge-detailed-result-type\" = 'Miss' OR (\"x-edge-detailed-result-type\" like '%Origin%' AND \"x-edge-detailed-result-type\" &lt;&gt; 'OriginShieldHit')) group by \"sc-status\", \"cs-host\", \"c-country\"; Requests 3xx/4xx/5xx error latency The latency of 3xx/4xx/5xx status code from the client to CloudFront SELECT \"sc-status\", count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672815240.0 AND timestamp &gt; 1672815180.0 GROUP BY \"sc-status\", \"cs-host\", \"c-country\"; Origin requests 3xx/4xx/5xx error latency The latency of 3xx/4xx/5xx status code back to the origin SELECT \"sc-status\", count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672815360.0 AND timestamp &gt; 1672815300.0 AND (\"x-edge-detailed-result-type\" = 'Miss' OR (\"x-edge-detailed-result-type\" like '%Origin%' AND \"x-edge-detailed-result-type\" &lt;&gt; 'OriginShieldHit')) group by \"sc-status\", \"cs-host\", \"c-country\"; Requests latency (&gt; 1 sec) rate The percentage of requests whose latency are larger than 1 second SELECT cast((sum(case when \"time-taken\" &gt;= 1.0 then 1 else 0 end) * 100.0 / count(*)) as decimal(38,2)) as ratio, count(timestamp), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 7 AND timestamp &lt;= 1672815720.0 AND timestamp &gt; 1672815660.0 group by \"cs-host\", \"c-country\"; Top 10 URLs with most requests Top 10 urls calculated by the number of requests SELECT b.* from (SELECT \"cs-host\", \"cs-uri-stem\", cnt, row_number() over (partition by \"cs-host\", \"cs-uri-stem\" order by cnt desc) rank from (select \"cs-host\", \"cs-uri-stem\", count(1) as cnt from \"db\".\"cf_log\" where year = 2023 AND month = 1 AND day = 3 AND timestamp &lt;= 1672790399.0 AND timestamp &gt; 1672704000.0 group by \"cs-host\", \"cs-uri-stem\") a) b where b.rank &lt;= 100 order by \"cs-host\", \"cnt\" desc; Bandwidth The bandwidth from the client to CloudFront SELECT sum(\"sc-bytes\")/(601)8, \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672813620.0 AND timestamp &gt; 1672813560.0 group by \"cs-host\", \"c-country\"; Origin bandwidth The bandwidth back to origin SELECT sum(\"sc-bytes\")/(601)8, \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 7 AND timestamp &lt;= 1672815900.0 AND timestamp &gt; 1672815840.0 AND (\"x-edge-detailed-result-type\" = 'Miss' OR (\"x-edge-detailed-result-type\" like '%Origin%' AND \"x-edge-detailed-result-type\" &lt;&gt; 'OriginShieldHit')) group by \"cs-host\", \"c-country\"; Data transfer The down stream traffic in response to the request SELECT sum(\"sc-bytes\"), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 7 AND timestamp &lt;= 1672816260.0 AND timestamp &gt; 1672816200.0 group by \"cs-host\", \"c-country\"; Top 10 URLs with most traffic Top 10 url calculated by traffic SELECT b.* from (SELECT \"cs-host\", \"cs-uri-stem\", sc_size, row_number() over (partition by \"cs-host\", \"cs-uri-stem\" order by sc_size desc) rank from (select \"cs-host\", \"cs-uri-stem\", sum(\"sc-bytes\") as sc_size from \"db\".\"cf_log\" where year = 2023 AND month = 1 AND day = 3 AND timestamp &lt;= 1672790399.0 AND timestamp &gt; 1672704000.0 group by \"cs-host\", \"cs-uri-stem\") a) b where b.rank &lt;= 100 order by \"cs-host\", \"sc_size\" desc; Cache hit rate (calculated using requests) Cache hit rate calculated by the number of requests SELECT cast((sum(case when \"x-edge-result-type\" like '%Hit' then 1 else 0 end) * 100.0 / count(1)) as decimal(38,2)) as ratio, count(timestamp), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 7 AND timestamp &lt;= 1672816680.0 AND timestamp &gt; 1672816620.0 AND \"x-edge-response-result-type\" &lt;&gt; 'LimitExceeded' AND \"x-edge-response-result-type\" &lt;&gt; 'CapacityExceeded' group by \"cs-host\", \"c-country\"; Cache hit rate (calculated using bandwidth) Cache hit ratio calculated by bandwidth SELECT cast((sum(case when \"x-edge-result-type\" like '%Hit' then \"sc-bytes\" else 0 end)100.0/(605)8) / (sum(\"sc-bytes\")/(605)*8 ) as decimal(38,2)) as ratio, count(timestamp), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 6 AND timestamp &lt;= 1672813320.0 AND timestamp &gt; 1672813260.0 AND \"x-edge-response-result-type\" &lt;&gt; 'LimitExceeded' AND \"x-edge-response-result-type\" &lt;&gt; 'CapacityExceeded' group by \"cs-host\", \"c-country\"; Cache result The request count for different x-edge-result-type SELECT \"x-edge-result-type\", count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 7 AND timestamp &lt;= 1672816980.0 AND timestamp &gt; 1672816920.0 group by \"x-edge-result-type\", \"cs-host\", \"c-country\"; Cache result latency The latency of the request for different x-edge-result-type SELECT \"x-edge-result-type\", count(timestamp), cast(avg(\"time-taken\") as decimal(38,3)), \"cs-host\", \"c-country\" FROM \"db\".\"cf_log\" WHERE year = 2023 AND month = 1 AND day = 4 AND hour = 7 AND timestamp &lt;= 1672816980.0 AND timestamp &gt; 1672816920.0 group by \"x-edge-result-type\", \"cs-host\", \"c-country\"; <p>You can navigate to the CloudFront monitoring dashboard from the left sidebar of the Web Console under Monitoring, and click distribution (you can find it by CNAMEs) that you want to view in the distribution list and specify a time period in the time picker. The traffic metrics will be show in the graphical charts in the dashboard.</p> <p></p> </li> <li> <p>Setup monitoring domain list</p> <p>The monitoring domain list includes all tracked CloudFront distributions. This list can be configured in the CloudFormation template parameter during deployment, see Deploy the solution. Once the CloudFormation stack deployed, you can set up/update the domain list in the Metrics dashboard web console.</p> <p>Note</p> <p>If you use 'ALL' to monitoring all domains in your AWS account in the deployment parameter, the update domain list function will override this setting if you change the selection in the dashboard.</p> <ol> <li>Log in to the web console.</li> <li>In the left sidebar, under monitoring, select CloudFront.</li> <li>Click 'Update Domain List' to open the  configuration window.</li> <li>In the pop-up window, select existing CloudFront distributions that you want to add the monitoring list.</li> <li>Choose Apply.</li> </ol> <p>When the domain list changed, the distributions list in the dashboard will be updated accordingly, and the tracked metrics will be displayed in the charts in about 5 minutes.</p> </li> </ul>"},{"location":"monitoring/non-real-time-monitoring/","title":"Non-real time monitoring with Amazon S3 Standard Logs","text":"<p>If you selected Non-real time monitoring when deploying the solution, the following architecture will be installed automatically to create the cloud resources in your account.</p> <p></p> <ol> <li>Enable CloudFront standard logs. You need to specify a S3 bucket to store CloudFront standard logs.</li> <li>Remove unused fields in CloudFront standard logs and partition logs in S3 bucket. CloudFront standard logs contain more than 30 fields, and less than 10 fields are needed for getting CloudFront metrics. AWS Lambda function will read the logs in the S3 bucket and remove the unused fields to reduce the size of the log file. It can improve Athena query speed and save costs as well. AWS Lambda function will also move the logs into the folder for partition, such as year=2022/month=07/day=10/hour=09/.</li> <li>Query standard logs in S3 via Athena. In order to allow Athena to speed up data query through data partitioning, Amazon EventBridge will create all partitions for the next day every day, and delete the partitions of the previous day. The Lambda function MetricCollector is used to analyze standard logs and collect monitoring metrics. It will be executed every 5 minutes.</li> <li>Save the query results in DynamoDB. Query the corresponding monitoring indicator data through Athena, such as calculating CHR (cache hit rate) and download rate through bandwidth, and finally store the monitoring indicator data in the DynamoDB table.</li> <li>Call APIs via API Gateway. When users send API request to API Gateway, a Lambda function called MetricManager will be triggered. The function reads the monitoring indicators and returns the corresponding results from the DynamoDB table. In order to strengthen security management and restrict API accesses, API key is enabled in API Gateway by default. Users are required to pass an x-api-key when calling the APIs.</li> </ol>"},{"location":"monitoring/non-real-time-monitoring/#activate-standard-monitoring","title":"Activate standard monitoring","text":"<ol> <li>Open the CloudFront console and click the Distribution tab, click the Distribution ID of the distribution for which you need to save standard log.</li> <li>Click the Edit button in Settings, open Edit Settings page to activate Standard Logging.</li> <li>Choose Open option and expand to find the in the S3 Bucket list which contains the -cloudfrontlogbuckete keyword and set the item as the S3 bucket for delivering logs. If you cannot find an S3 bucket with the corresponding name, please verify the parameter CloudFront Log Type is yes-Non-Realtime when deploying the solution in CloudFormation, for details see Deploying the solution.</li> <li>Finally, please click Save Changes to make the settings take effect.</li> </ol>"},{"location":"monitoring/non-real-time-monitoring/#metrics","title":"Metrics","text":"<p>The following metrics are provided:</p> <ul> <li>request: the number of requests from the client to CloudFront</li> <li>requestOrigin: the number of requests back to the origin</li> <li>statusCode: the status code from the client to CloudFront</li> <li>statusCodeOrigin: the status code of the back-to-origin</li> <li>bandwidth: the bandwidth from the client to CloudFront</li> <li>bandwidthOrigin: bandwidth back to origin</li> <li>chr: cache hit rate calculated by the number of requests</li> <li>chrBandWidth: cache hit ratio calculated by bandwidth</li> <li>topNUrlRequests: top url calculated by the number of requests</li> <li>topNUrlSize: top url calculated by traffic</li> <li>downstreamTraffic: down stream traffic in response to the request</li> </ul>"},{"location":"monitoring/overview/","title":"Overview","text":""},{"location":"monitoring/overview/#monitoring","title":"Monitoring","text":"<p>The solution provides two kinds of monitoring: non-real time monitoring and real time monitoring. You can choose one of them to deploy. You can use the solution to view CloudFront traffic metrics via built-in dashboard or via API calls.</p> <p>The solution uses Athena to query CloudFront logs, if this is first time you use Athena in the region, you are required to specify the location for query results in Athena, refer to link.</p> <ul> <li>Non-real time monitoring with Amazon S3 Standard Logs</li> <li>Real time monitoring with Amazon Kinesis</li> <li>Metrics dashboard</li> </ul>"},{"location":"monitoring/real-time-monitoring/","title":"Real time monitoring with Amazon Kinesis","text":"<p>If you selected Real time monitoring when deploying the solution (CloudFormation stack), the following architecture will be installed, and the corresponding cloud resources will be automatically created in your account. </p> <p></p> <ol> <li>Enable CloudFront real-time logs. You need to configure the corresponding data stream in Kinesis Data Stream.</li> <li>Set up Kinesis Data Firehose to complete data transfer quickly. This enables CloudFront's real-time logs to pass through Kinesis Data Stream and finally store them in S3 buckets through Kinesis Data Firehose. During this process, to monitor the download speed in each country and each ISP, Kinesis Data Firehose invokes the Amazon Lambda function Log Transformer to find the ISP and country code through the client IP, and cooperate with Kinesis Data Firehose to implement dynamic partitioning, that is, real-time logs are partitioned by partition key and stored in S3 bucket, such as year=2021/month=12/day=10/hour=09.</li> <li>Query real-time logs in S3 via Athena. In order to allow Athena to speed up data query through data partitioning, Amazon EventBridge will create all partitions for the next day every day, and delete the partitions of the previous day. The Lambda function MetricCollector is used to analyze real-time logs and collect monitoring metrics. It will be executed every 5 minutes.</li> <li>Save the query results in DynamoDB. Query the corresponding monitoring indicator data through Athena, such as calculating CHR (cache hit rate) and download rate through bandwidth, and finally store the monitoring indicator data in the DynamoDB table.</li> <li>Call APIs via API Gateway. When users send API request to API Gateway, a Lambda function called MetricManager will be triggered. The function reads the monitoring indicators and returns the corresponding results from the DynamoDB table. In order to strengthen security management and restrict API accesses, API key is enabled in API Gateway by default. Users are required to pass an x-api-key when calling the APIs.</li> </ol>"},{"location":"monitoring/real-time-monitoring/#activate-monitoring","title":"Activate monitoring","text":"<ol> <li>Open the CloudFront console to enable the Real-time configurations under Logs setting tab.</li> <li> <p>Click <code>Create configuration</code> button to open configuration settings, input 100 in the Sampling rate field and all fields.</p> <p>PLEASE choose the fields by the default order</p> <p></p> </li> <li> <p>Choose the cloudfront-real-time-log-data-stream in the <code>Endpoint</code> field.</p> </li> <li>In Distributions select the distribution and in the <code>Cache behaviors</code> select Default(*).</li> </ol>"},{"location":"monitoring/real-time-monitoring/#metrics","title":"Metrics","text":"<p>The following metrics are provided:</p> <ul> <li>request: the number of requests from the client to CloudFront</li> <li>requestOrigin: the number of requests back to the origin</li> <li>statusCode: the status code from the client to CloudFront</li> <li>statusCodeOrigin: the status code of the back-to-origin</li> <li>bandwidth: the bandwidth from the client to CloudFront</li> <li>bandwidthOrigin: bandwidth back to origin</li> <li>chr: cache hit rate calculated by the number of requests</li> <li>chrBandWidth: cache hit ratio calculated by bandwidth</li> <li>downloadSpeed: download speed from client to CloudFront</li> <li>downloadSpeedOrigin: the download speed of the back-to-origin</li> <li>topNUrlRequests: top url calculated by the number of requests</li> <li>topNUrlSize: top url calculated by traffic</li> <li>downstreamTraffic: down stream traffic in response to the request</li> </ul>"}]}