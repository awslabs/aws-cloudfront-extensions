Description: (SO8146) verify-jwt-uri is a CloudFront Function which validates a token in the url of the incoming request
  
Resources:
  VerifyJWTFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: verify-jwt-uri
      AutoPublish: true
      FunctionConfig:
        Comment: verify-jwt
        Runtime: cloudfront-js-1.0
      FunctionCode: |
        var crypto = require("crypto");

        function token_gen(key, timestamp, path) {
            var s = key + path + timestamp;
            var m = crypto.createHash("md5").update(s).digest("hex");
            return m;
        }

        function get_time() {
            var now_ts = Math.floor(new Date().getTime() / 1000);
            return now_ts.toString(16);
        }

        function handler(event) {
            // parse request
            var request = event.request;
            var request_uri = request.uri;
            var nPos = [];
            for (var i = 0; i < request_uri.length; i++) {
                if (request_uri[i] === "/") {
                    nPos.push(i);
                }
            }
            console.log(nPos);

            //check time and token
            var token = request_uri.substring(1, nPos[1]);
            var timestamp = request_uri.substring(nPos[1] + 1, nPos[2]);
            var path = request_uri.substring(nPos[2], request_uri.length);
            
            // you need to add your own key below
            var key = "<input-key-here>";

            if (token === token_gen(key, timestamp, path) && timestamp > get_time()) {
                // change uri and then return request
                request.uri = path;

                return request;
            } else {
                // return response
                var response = {
                    statusCode: 403,
                    statusDescription: "Forbidden",
                    headers: {
                        "cache-control": { value: "max-age=100" },
                        "content-type": { value: "text/html" },
                        "content-encoding": { value: "UTF-8" },
                    },
                };

                return response;
            }
        }


Outputs:
  SolutionId:
    Description: "Solution id"
    Value: "SO8146"
