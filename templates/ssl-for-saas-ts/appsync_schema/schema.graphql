type cname {
	domainName: String!
	sanList: [String!]
	originsItemsDomainName: String!
}

type pem {
	CertPem: String!
	PrivateKeyPem: String!
	ChainPem: String!
	originsItemsDomainName: String!
}

type createOutput {
	statue: String!
	createdAt: AWSDateTime!
  	updatedAt: AWSDateTime!
}

type importOutput {
	status: String!
	createdAt: AWSDateTime!
  	updatedAt: AWSDateTime!
}

input cnameInput {
	domainName: String!
	sanList: [String!]
	originsItemsDomainName: String!
}

input pemInput {
	CertPem: String!
	PrivateKeyPem: String!
	ChainPem: String!
	originsItemsDomainName: String!
}

input certImportInput {
	acm_op: String!
	acm_domain: String!
	dist_aggregate: String!
	pem: [pemInput!]!
}

input certCreateInput {
	acm_op: String!
	acm_domain: String!
	dist_aggregate: String!
	cnameList: [cnameInput!]!
}

type Mutation {
	certCreate(input: certCreateInput): createOutput
	certImport(input: certImportInput!): importOutput
}

type Notification {
	id: ID
	date: AWSDate
	type: String
}

type Query {
	Notifications(limit: Int): [Notification]
}

