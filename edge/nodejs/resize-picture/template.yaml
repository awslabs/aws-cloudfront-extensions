AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8123)
  resize-picture 

  Resize pictures on the fly according to dimensions passed by the query parameter
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Tags:
      Publisher: AWS

Metadata:
  AWS::ServerlessRepo::Application:
    Name: resize-picture
    Description: Resize pictures on the fly according to dimensions passed by the query parameter
    Author: AWS
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['gcr','gcr-solutions','cloudfront','cloudfront+','aws-cloudfront-extensions','edge','lambda-edge', 'aws']
    HomePageUrl: https://www.amazonaws.cn/en/solutions/lambda-edge-collection-for-cloudfront/
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/awslabs/aws-cloudfront-extensions/tree/main/edge/nodejs/resize-picture

Parameters:
  S3BucketName:
    Type: String
    Default: ""
    Description: "S3 bucket to store the pictures, you need to create the bucket first"

Resources:
  ResizeLambdaEdgeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: resize-picture/
      Handler: app.handler
      Runtime: nodejs12.x
      Role: !GetAtt EdgeFunctionRole.Arn

  EdgeFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${AWS::StackName}-edgeFunction
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
          - arn:aws:iam::aws:policy/AWSLambda_FullAccess

  UpdateEdgeCodeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    DependsOn: ResizeLambdaEdgeFunction
    Properties:
      CodeUri: 's3://aws-cloudfront-extension-lambda-edge/update-lambda-function.zip'
      Handler: index.handler
      Runtime: python3.7
      Timeout: 180
      Role: !GetAtt EdgeFunctionRole.Arn

  UpdateConfigCustom:
    Type: Custom::UpdateConfigCustom
    DependsOn: UpdateEdgeCodeFunction
    Properties:
      ServiceToken: !GetAtt UpdateEdgeCodeFunction.Arn
      SourceUrl: 'https://aws-cloudfront-extension-lambda-edge.s3.amazonaws.com/edge/resize-picture/resize-picture.zip'
      EdgeFunctionArn: !GetAtt ResizeLambdaEdgeFunction.Arn
      HandlerFileName: 'app.js'
      PARA_S3BUCKET: !Ref S3BucketName

Outputs:
  ResizeLambdaEdgeFunction:
    Description: "Resize Image Lambda Edge function ARN"
    Value: !GetAtt ResizeLambdaEdgeFunction.Arn
  ResizeLambdaEdgeFunctionIamRole:
    Description: "Implicit IAM Role created for Resize Image Lambda Edge function"
    Value: !GetAtt EdgeFunctionRole.Arn
  SolutionId:
    Description: "Solution id"
    Value: "SO8123"
