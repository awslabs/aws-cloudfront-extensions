AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8101) 
  serving-based-on-device

  The lambda shows how to serve different version of an object based on the type of device 
  that user is using.
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Tags:
      Publisher: AWS

Metadata:
  AWS::ServerlessRepo::Application:
    Name: serving-based-on-device
    Description: The Lambda@Edge is designed to serve content based on device type, for example, mobile device will be forwarded to access content for mobile device, desktop device will be forwarded to access specific content
    Author: AWS
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['gcr','gcr-solutions','cloudfront','cloudfront+','aws-cloudfront-extensions','edge','lambda-edge', 'aws']
    HomePageUrl: https://www.amazonaws.cn/en/solutions/lambda-edge-collection-for-cloudfront/
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/awslabs/aws-cloudfront-extensions/edge/nodejs/serving-based-on-device

Parameters:
  DesktopPathParameter:
    Type: String
    Default: "/desktop"
    Description: "Content folder for desktop device"
  MobilePathParameter:
    Type: String
    Default: "/mobile"
    Description: "Content folder for mobile device"
  TabletPathParameter:
    Type: String
    Default: "/tablet"
    Description: "Content folder for tablet device"
  SmartTVPathParameter:
    Type: String
    Default: "/smarttv"
    Description: "Content folder for smart TV"


Resources:
  ServingOnDeviceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: serving-based-on-device/
      Handler: app.handler
      Runtime: nodejs12.x
      Role: !GetAtt EdgeFunctionRole.Arn


  EdgeFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${AWS::StackName}-edgeFunction
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
          - arn:aws:iam::aws:policy/AWSLambda_FullAccess

  UpdateEdgeCodeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    DependsOn: ServingOnDeviceFunction
    Properties:
      CodeUri: 's3://aws-cloudfront-extension-lambda-edge/update-lambda-function.zip'
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt EdgeFunctionRole.Arn

  UpdateConfigCustom:
    Type: Custom::UpdateConfigCustom
    DependsOn: UpdateEdgeCodeFunction
    Properties:
      ServiceToken: !GetAtt UpdateEdgeCodeFunction.Arn
      SourceUrl: 'https://aws-cloudfront-extension-lambda-edge.s3.amazonaws.com/edge/serving-based-on-device/serving-based-on-device.zip'
      EdgeFunctionArn: !GetAtt ServingOnDeviceFunction.Arn
      HandlerFileName: 'app.js'       
      PARA_DESKTOP_PATH: !Ref DesktopPathParameter
      PARA_MOBILE_PATH: !Ref MobilePathParameter
      PARA_TABLET_PATH: !Ref TabletPathParameter
      PARA_SMART_TV_PATH: !Ref SmartTVPathParameter

Outputs:
  ServingOnDeviceFunction:
    Description: "Lambda Edge function ARN"
    Value: !GetAtt ServingOnDeviceFunction.Arn
  ServingOnDeviceFunctionIamRole:
    Description: "Implicit IAM Role created for Simple Lambda Edge function"
    Value: !GetAtt EdgeFunctionRole.Arn
  SolutionId:
    Description: "Solution id"
    Value: "SO8101"
