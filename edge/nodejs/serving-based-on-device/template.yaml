AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  serving-based-on-device

  The lambda shows how to serve different version of an object based on the type of device 
  that user is using.
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    Tags:
      Publisher: GCR-Solutions

Metadata:
  AWS::ServerlessRepo::Application:
    Name: serving-based-on-device
    Description: Sample SAM Template for serving-based-on-device
    Author: AWS
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['gcr-solutions','cloudfront+','sample', 'edge','lambda-edge']
    HomePageUrl: https://www.amazonaws.cn/en/solutions/
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/cc4i/aws-cloudfront-extensions/edge/nodejs/serving-based-on-device

Parameters:
  DesktopPathParameter:
    Type: String
    Default: "/desktop"
    Description: "Content folder for desktop device"
  MobilePathParameter:
    Type: String
    Default: "/mobile"
    Description: "Content folder for mobile device"
  TabletPathParameter:
    Type: String
    Default: "/tablet"
    Description: "Content folder for tablet device"
  SmartTVPathParameter:
    Type: String
    Default: "/smarttv"
    Description: "Content folder for smart TV"


Resources:
  ServingOnDeviceFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: serving-based-on-device/
      Handler: app.handler
      Runtime: nodejs12.x
      Role: !GetAtt EdgeFunctionRole.Arn
      Environment:
        Variables:
          DESKTOP_PATH: !Ref DesktopPathParameter
          MOBILE_PATH: !Ref MobilePathParameter
          TABLET_PATH: !Ref TabletPathParameter
          SMART_TV_PATH: !Ref SmartTVPathParameter


  EdgeFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${AWS::StackName}-edgeFunction
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - Edgelambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess

Outputs:
  ServingOnDeviceFunction:
    Description: "Simple Lambda Edge function ARN"
    Value: !GetAtt ServingOnDeviceFunction.Arn
  ServingOnDeviceFunctionIamRole:
    Description: "Implicit IAM Role created for Simple Lambda Edge function"
    Value: !GetAtt EdgeFunctionRole.Arn
