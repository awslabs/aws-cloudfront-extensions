AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "(SO8137) cross-origin-resource-sharing is a lambda@Edge which will add CORS(Cross Origin Resource Sharing) Headers."
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Tags:
      Publisher: AWS

Metadata:
  AWS::ServerlessRepo::Application:
    Name: cross-origin-resource-sharing
    Description: Support CORS(Cross Origin Resource Sharing)
    Author: AWS
    SpdxLicenseId: Apache-2.0
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: ['gcr','gcr-solutions','cloudfront','cloudfront+','aws-cloudfront-extensions','edge','lambda-edge', 'aws']
    HomePageUrl: https://www.amazonaws.cn/en/solutions/lambda-edge-collection-for-cloudfront/
    SemanticVersion: 1.0.0
    SourceCodeUrl: https://github.com/awslabs/aws-cloudfront-extensions/tree/main/edge/nodejs/cross-origin-resource-sharing

Parameters:
  AllowOrigin:
    Type: String
    Default: "*"
    Description: "Allowed origin, for example, https://www.example.com. Use * to allow all origins"

Resources:
  CORSFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cross-origin-resource-sharing/
      Handler: app.handler
      Runtime: nodejs12.x
      Role: !GetAtt EdgeFunctionRole.Arn

  EdgeFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${AWS::StackName}-edgeFunction
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
          - arn:aws:iam::aws:policy/AWSLambda_FullAccess

  UpdateEdgeCodeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    DependsOn: CORSFunction
    Properties:
      CodeUri: 's3://aws-cloudfront-extension-lambda-edge/update-lambda-function.zip'
      Handler: index.handler
      Runtime: python3.7
      Timeout: 180
      Role: !GetAtt EdgeFunctionRole.Arn

  UpdateConfigCustom:
    Type: Custom::UpdateConfigCustom
    DependsOn: UpdateEdgeCodeFunction
    Properties:
      ServiceToken: !GetAtt UpdateEdgeCodeFunction.Arn
      SourceUrl: 'https://aws-cloudfront-extension-lambda-edge.s3.amazonaws.com/edge/cross-origin-resource-sharing/cross-origin-resource-sharing.zip'
      EdgeFunctionArn: !GetAtt CORSFunction.Arn
      HandlerFileName: 'app.js'
      PARA_ORIGIN: !Ref AllowOrigin

Outputs:
  CORSFunctionARN:
    Description: "ARN"
    Value: !GetAtt CORSFunction.Arn
  SolutionId:
    Description: "Solution id"
    Value: "SO8137"
  CORSFunctionIamRole:
    Description: "Implicit IAM Role created for Simple Lambda Edge function"
    Value: !GetAtt EdgeFunctionRole.Arn
